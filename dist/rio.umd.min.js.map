{"version":3,"sources":["webpack://Rio/webpack/universalModuleDefinition","webpack://Rio/webpack/bootstrap","webpack://Rio/./src/const.ts","webpack://Rio/./src/util.ts","webpack://Rio/./src/vnode/vnode.ts","webpack://Rio/./src/vdom/vdom.ts","webpack://Rio/./src/decorator/property.ts","webpack://Rio/./src/router/router-manager.ts","webpack://Rio/./src/observer/watcher.ts","webpack://Rio/./src/mvvm/mvvm.ts","webpack://Rio/./src/eval.js","webpack://Rio/./src/manager/components-manager.ts","webpack://Rio/./src/manager/start.ts","webpack://Rio/./src/vnode/custom-node.ts","webpack://Rio/./src/observer/observer.ts","webpack://Rio/./src/observer/notice-center.ts","webpack://Rio/./src/manager/directive-manager.ts","webpack://Rio/./src/directive/inner-dir.ts","webpack://Rio/./src/router/router-state.ts","webpack://Rio/./src/manager/app-manager.ts","webpack://Rio/./src/mvvm/directive-mvvm.ts","webpack://Rio/./src/mvvm/app-mvvm.ts","webpack://Rio/./src/mvvm/component-mvvm.ts","webpack://Rio/./src/decorator/directive.ts","webpack://Rio/./src/decorator/app.ts","webpack://Rio/./src/vnode/plug-node.ts","webpack://Rio/./src/vnode/router-node.ts","webpack://Rio/./src/vnode/template-node.ts","webpack://Rio/./src/vnode/if-node.ts","webpack://Rio/./src/observer/msg-queue.ts","webpack://Rio/./src/observer/watcher-collect.ts","webpack://Rio/./src/models.ts","webpack://Rio/./src/vnode/for-node.ts","webpack://Rio/./src/vnode/slot-node.ts","webpack://Rio/./src/vnode/directive-node.ts","webpack://Rio/./src/directive/style.ts","webpack://Rio/./src/directive/model.ts","webpack://Rio/./src/directive/html.ts","webpack://Rio/./src/directive/href.ts","webpack://Rio/./src/directive/event.ts","webpack://Rio/./src/directive/class.ts","webpack://Rio/./src/vnode/vinalla-node.ts","webpack://Rio/./src/decorator/component.ts","webpack://Rio/./src/main.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","direction","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrl","params","j","matchtype","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","RegisterRouter","routers","checkRouter","router","children","redirect","copyRouter","component","components","matchcounter","StartMatchUrl","SetActiveRouter","history","replaceState","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","router_manager_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","GetActiveRouter","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$IsRoot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","getAnchorNode","GetRef","ref","$AddFragment","html","DOMParser","parseFromString","body","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","$onRouterChange","callbck","WatchRouterChange","$NavigateTo","context","attachObj","newcontext","assign","$attachObj","eval","repository","id","Id","ComponentAutoId","count","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","templateUrl","template","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","rootdom","display","parentElement","replaceChild","app","inner_dir_1","const_2","plug_node_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","classes","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","GetInnerDir","styledir","classitem","_a","classList","add","classdir","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","pop","splice","shift","func","firstget","watcher","notices","DEPRECATED","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","class_1","href_1","html_1","model_1","style_1","innerDirs","RegisterInnerDir","comiple","Href","DirModel","OnEvent","Html","Classes","Style","_RouterInfo","path","getParam","active","previous","listeners","listen","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","newvalue","$checkProp","$element","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","$GetFenceNode","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","routername","lastConstructor","instance","construct","custnode","vnode_1","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","items","forSplit","forExp","kvs","indexName","newCopyNode","itemexp","itemexpValue","that","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","num","bind","DirectiveNode","addProperty","styleJson","setValue","inputType","getAttribute","checked","inputtype","input","addEventListener","cur","oldarray","strEval","setAttr","setAttribute","href","streval","preventDefault","options","methodStr_1","paramsStr","ps_1","Number","valueOf","isNaN","classJson","remove","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","this_1","dirNode","dirMvvm_1","isprop","isevent","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Rio\"] = factory();\n\telse\n\t\troot[\"Rio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"ref\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string,direction:\"both\"|\"left\"|\"right\"=\"both\"){\n    if(char.length>1)\n        throw new Error(\"only receve one character\");\n    let start=-1;\n    if(direction==\"both\" || direction==\"left\"){\n        while(str[start+1]==char){\n            start++\n        }\n    }\n    \n    let end=str.length;\n    if(direction==\"both\"||direction==\"right\"){\n        while(str[end-1]==char){\n            end--\n        }\n    }\n    \n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { DomStatus } from './../models';\nimport { VinallaNode } from './vinalla-node';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError, Trim } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=0;\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    \n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        \n        if(router.url!=null)\n            router.url=Trim(router.url.trim(),\"/\",\"right\");\n        if(router.redirect==null && (router.url==null || router.url==\"\")){\n            throw new Error(\"must specify url in router\")\n        }\n        router.params=router.params?router.params:[];\n        if(router.redirect==null){\n            if(router.url.indexOf(\"/\")!=0)\n                router.url= \"/\"+router.url;\n        }\n        checkRouter(router.children)\n    });\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        url:router.url,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrl:\"\",\n        params:router.params,\n        redirect:router.redirect\n    }\n    if(parent!=null){\n        if(router.redirect!=null)\n            r.redirect=parent.fullUrl+router.redirect;  \n        else  \n            r.fullUrl=parent.fullUrl+router.url;\n    }else{\n        r.fullUrl=router.url;\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\n/**\n * matchtype 0 完全匹配  1 matchedRouter是当前location的前缀  2 不匹配\n */\nfunction matchRouter(matchedRouter:InnerRouter):{matchtype:number,params:{name:string,value:string}[]}{\n    let vinallaUrl=location.pathname\n    vinallaUrl=Trim(vinallaUrl,\"/\",\"right\");\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    let matchedSlice=matchedRouter.fullUrl.split(\"/\");\n    let params:{name:string,value:string}[]=[];\n    for(var j=0;j<matchedSlice.length;j++){\n        if(vinallaSlice.length-1<j){\n            return {matchtype:2,params:[]};\n        }\n        if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n            let name=RegExp.$1\n            params.push({name:name,value:vinallaSlice[j]})\n            continue;\n        }\n        if(matchedSlice[j]==vinallaSlice[j]){\n            continue;\n        }\n        return {matchtype:2,params:[]};\n    }\n    \n    let requireParams=matchedRouter.params;\n    let searchParams=getSearchParams();\n    params=params.concat(searchParams);\n    requireParams.forEach(rp=>{\n        let exist=params.find(p=>p.name==rp.name);\n        if(exist==null && rp.required){\n            throw new Error(\"router match failed,no matched params:\"+rp.name);\n        }\n    })\n    if(j==vinallaSlice.length){\n        return {matchtype:0,params:params};\n    }else{\n        return {matchtype:1,params:params};\n    }\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\n\n\nlet matchcounter=0;\nexport function StartMatchUrl(routers?:InnerRouter[]):boolean{\n    if(matchcounter>10){\n        throw new Error(\"circular router match\");\n    }\n    if(routers==null){\n        routers=appRouters;\n    }\n    if(routers==appRouters){\n        matchcounter++;\n        matchedRouter=[];\n    }\n        \n    for(let i=0;i<routers.length;i++){\n        let router=routers[i];\n        if(router.redirect!=null){\n            SetActiveRouter(location.pathname,[]);\n            window.history.replaceState(null,\"\",router.redirect);\n            StartMatchUrl(appRouters);\n            return true;\n        }\n        let res=matchRouter(router);\n        if(res.matchtype==2){\n            continue;\n        }\n        if(res.matchtype==1){\n            if(router.component!=null || router.components!=null)\n                matchedRouter.push(router);\n            let find=StartMatchUrl(router.children);\n            if(find){\n                return true;\n            }\n            continue;\n        }\n        if(res.matchtype==0){\n            SetActiveRouter(location.pathname,res.params);\n            if(router.component!=null || router.components!=null)\n                matchedRouter.push(router);\n            return true;\n        }\n    }\n    return false;\n}\nexport function NextRouter(vnode:VNode,name?:string):IComponentMvvm{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==0){\n        firstVNode=vnode\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component;\n        if(component==null){\n            throw new Error(\"component in router be null?\");\n        }\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\n\nexport interface Router{\n    url?:string\n    component?: IComponentMvvm\n    components?:{[name:string]:IComponentMvvm}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrl:string\n}\n\nexport function NotifyUrlChange(){\n    matchcounter=0;\n    let matched=StartMatchUrl();\n    if(!matched){\n        throw new Error(\"no matched router\");\n    }\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter, WatchRouterChange } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterInfo } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { NotifyUrlChange } from '../router/router-manager';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router(){\n        return GetActiveRouter()\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    private getAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    GetRef(ref:string){\n        let vnode= this.$treeRoot.GetAnchor(ref);\n        if(vnode!=null && vnode.DomSet.length>0)\n            return vnode.DomSet[0].dom;\n        else\n            return null;\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.getAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    protected $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    protected $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**监视路由变化 */\n    protected $onRouterChange(callbck:(newrouter:RouterInfo,oldrouter:RouterInfo)=>void){\n        WatchRouterChange(this.$treeRoot,callbck);\n    }\n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nlet id=0;\nexport function ComponentAutoId(){\n    let count=id++;\n    let str=\"\";\n    while(count>0){\n        str+=\"_\";\n        count--;\n    }\n    return str;\n}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\nimport {StartMatchUrl} from \"../router/router-manager\"\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        StartMatchUrl()\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        \n        let rootdom=content.dom as HTMLElement;\n        if(rootdom.style.display==\"none\"){\n            rootdom.style.display=\"\";\n        }\n\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { GetInnerDir } from '../directive/inner-dir';\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { PRE } from './../const';\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n    /**获取自定义组建上的class 或者r-class属性 */\n    private classes:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                if(name==\"class\"||name==PRE+\"class\"){\n                    this.classes[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render();\n        this.DomSet=[dom];\n        \n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n        }\n        if(this.styles[PRE+'style']!=null){\n            let styledir=GetInnerDir(PRE+\"style\");\n            let exp=this.styles[PRE+'style'];\n            styledir(exp,this);\n        }\n        if(this.classes['class']!=null){\n            let classitem=this.classes['class'].split(/\\s+/);\n            (dom.dom as HTMLElement).classList.add(...classitem);\n        }\n        if(this.classes[PRE+\"class\"]!=null){\n            let classdir=GetInnerDir(PRE+'class');\n            let exp=this.classes[PRE+'class'];\n            classdir(exp,this);\n        }\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { PRE } from '../const';\nimport { VNode } from '../vnode/vnode';\nimport { Classes } from \"./class\";\nimport { OnEvent } from './event';\nimport { Href } from './href';\nimport { Html } from \"./html\";\nimport { DirModel } from './model';\nimport { Style } from \"./style\";\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VNode,options?:string[]):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"on\",OnEvent)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[]);\nlet previous:RouterInfo=null;\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    previous=active;\n    active=new _RouterInfo(path,params)\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,previous)\n    })\n}\nexport function GetActiveRouter(){\n    return {active:active,previous:previous}\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { DomStatus } from '../models';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    \n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { MoveBack, NextRouter } from \"../router/router-manager\";\nimport { VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { IComponentMvvm } from './../models';\nimport { CustomNode } from \"./custom-node\";\nimport { VNode } from \"./vnode\";\n\nexport class RouterNode extends VNode{\n    private lastConstructor:IComponentMvvm=null;\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private routername:string) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this,this.routername);\n        this.lastConstructor=router;\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let constructor=NextRouter(this,this.routername);\n        if(this.lastConstructor!=constructor){\n            this.lastConstructor=constructor;\n            //释放旧的资源\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n\n            if(constructor!=null){\n                let vnode=this.instance(constructor)\n                this.Children=[vnode]\n                this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n                this.DomSet= this.DomSet.concat(vnode.Render())\n                this.Parent.Reflow();\n                MoveBack()\n            }else{\n                this.Children=[]\n                this.DomSet.forEach(dom=>{\n                    dom.type=DomType.DELETE\n                })\n            }\n        }else{\n            this.Children.forEach(child=>child.OnRouterChange())\n        }\n        \n    }\n    private instance(construct:IComponentMvvm):VNode{\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name?:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\n\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\n\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    private forExp:ForExp\n    private indexName:string\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let items=this.originForExp.trim().split(\";\");\n        let forSplit=items[0].split(/\\s+/);\n        this.forExp=new ForExp(forSplit[0],forSplit[2]);\n\n        if(items.length>1){\n            let kvs=items[1].split(\"=\");\n            if(kvs.length==2){\n                if(kvs[1]==\"$index\")\n                    this.indexName=kvs[0];\n                else\n                    throw new Error(\"unrecognized variable \"+kvs[1]);\n            }\n        }\n    }\n    private newCopyNode(n:number){\n        let itemexp=this.forExp.itemExp;\n        let itemexpValue=this.forExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                if(that.indexName!=null)\n                    Object.defineProperty(mvvm,that.indexName,{\n                        value:n,\n                        configurable:true,\n                        enumerable:true\n                    });\n                else\n                    Object.defineProperty(mvvm,\"$index\",{\n                        value:n,\n                        configurable:true,\n                        enumerable:true\n                    });\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.forExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.forExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.forExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VNode } from '../vnode/vnode';\nexport function Style(exp:string,vnode:VNode){\n    let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n    if(!reg.test(exp)){\n        throw new Error(\"exp format error:\"+exp);\n    }\n    let styleJson=ParseStyle(exp);\n    for(let key in styleJson){\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n            if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n            }else{\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n            }\n        });\n        let value=watcher.GetCurValue();\n        if(toString.call(value)==\"[object String]\" && value!=\"\"){\n            ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n        }\n    }\n}\n","import { VNode } from \"../vnode/vnode\";\nimport { Watcher } from './../observer/watcher';\nexport function DirModel(exp: string, vnode: VNode) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { StrToEvalstr } from \"../util\";\nimport { VNode } from '../vnode/vnode';\n\nexport function Html(exp:string,vnode:VNode){\n    let strEval=StrToEvalstr(exp);\n    if(strEval.isconst)\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n    else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VNode } from \"../vnode/vnode\";\n\nexport function Href(exp:string,vnode:VNode){\n    let href:string=\"\";\n    let streval=StrToEvalstr(exp);\n    let dom=vnode.DomSet[0].dom as HTMLElement;\n    if(streval.isconst){\n        href=streval.exp;\n        setAttr(dom,href);\n    }\n    else{                \n        let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n            href=newvalue;\n            setAttr(dom,href);\n        });\n        href=watcher.GetCurValue();\n        setAttr(dom,href);\n    }\n        \n    dom.addEventListener(\"click\",(event:Event)=>{\n        if(dom.nodeName=='A'){\n            event.preventDefault();\n        }\n        vnode.mvvm.$NavigateTo(href);\n    });\n}\nfunction setAttr(dom:HTMLElement,value:string){\n    if(dom.nodeName==\"A\")\n        dom.setAttribute(\"href\",value);\n    else\n        dom.setAttribute(PRE+\"href\",value);\n}\n","import { REG_EVENT, REG_STR } from \"../const\";\nimport { VNode } from '../vnode/vnode';\nexport function OnEvent(exp:string,vnode:VNode,options:string[]){\n    if(options==null || options.length==0)\n        throw new Error(\"r-on need specify event name\");\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(options[0], (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(options[0], () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VNode } from '../vnode/vnode';\nexport function Classes(exp:string,vnode:VNode){\n\n    let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n    if(!reg.test(exp)){\n        throw new Error(\"exp format error:\"+exp);\n    }\n    let classJson=ParseStyle(exp);\n    for(let key in classJson){            \n        let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n            if(newvalue){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }else{\n                (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n            }\n        });\n        let value=watcher.GetCurValue();\n        if(value){\n            (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n        }\n    }\n}","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,exp:string,options:string[]}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            let slice=attr.Name.split(\":\");\n            let dir=GetInnerDir(slice[0]);\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,exp:attr.Value,options:slice.slice(1)})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.options)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { GetDomTree, RegisterComponent, InitComponent, ComponentAutoId } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { NewVNode } from '../vdom/vdom';\nimport { VNode } from '../vnode/vnode';\nimport { DomStatus, Event, IComponentMvvm } from './../models';\nimport { FetchProperty } from './property';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                //以防页面组件未初始化\n                InitComponent(this.$InitName(),this.$InitNamespace());\n\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        if(option.name==null)\n            option.name=target.name.toLowerCase()+ComponentAutoId();\n        RegisterComponent(option.name,option.namespace,constructor,option);\n        return (constructor as any);\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}