{"version":3,"sources":["webpack://Rio/webpack/universalModuleDefinition","webpack://Rio/webpack/bootstrap","webpack://Rio/./src/const.ts","webpack://Rio/./src/util.ts","webpack://Rio/./src/vnode/vnode.ts","webpack://Rio/./src/vdom/vdom.ts","webpack://Rio/./src/decorator/property.ts","webpack://Rio/./src/router/router-manager.ts","webpack://Rio/./src/observer/watcher.ts","webpack://Rio/./src/mvvm/mvvm.ts","webpack://Rio/./src/eval.js","webpack://Rio/./src/manager/components-manager.ts","webpack://Rio/./src/manager/start.ts","webpack://Rio/./src/vnode/custom-node.ts","webpack://Rio/./src/router/router-state.ts","webpack://Rio/./src/observer/observer.ts","webpack://Rio/./src/observer/notice-center.ts","webpack://Rio/./src/manager/directive-manager.ts","webpack://Rio/./src/manager/app-manager.ts","webpack://Rio/./src/mvvm/directive-mvvm.ts","webpack://Rio/./src/mvvm/app-mvvm.ts","webpack://Rio/./src/mvvm/component-mvvm.ts","webpack://Rio/./src/decorator/directive.ts","webpack://Rio/./src/decorator/app.ts","webpack://Rio/./src/vnode/plug-node.ts","webpack://Rio/./src/vnode/router-node.ts","webpack://Rio/./src/vnode/template-node.ts","webpack://Rio/./src/vnode/if-node.ts","webpack://Rio/./src/observer/msg-queue.ts","webpack://Rio/./src/observer/watcher-collect.ts","webpack://Rio/./src/models.ts","webpack://Rio/./src/vnode/for-node.ts","webpack://Rio/./src/vnode/slot-node.ts","webpack://Rio/./src/vnode/directive-node.ts","webpack://Rio/./src/directive/class.ts","webpack://Rio/./src/directive/style.ts","webpack://Rio/./src/directive/html.ts","webpack://Rio/./src/directive/onclick.ts","webpack://Rio/./src/directive/model.ts","webpack://Rio/./src/directive/href.ts","webpack://Rio/./src/directive/inner-dir.ts","webpack://Rio/./src/vnode/vinalla-node.ts","webpack://Rio/./src/decorator/component.ts","webpack://Rio/./src/main.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrls","params","j","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","matchUrl","routers","flatRouter","children","redirect","router","SetActiveRouter","history","replaceState","parent_1","unshift","RegisterRouter","checkRouter","component","components","urls","map","copyRouter","fullurl","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","router_manager_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","GetActiveRouter","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$IsRoot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","GetAnchorNode","$AddFragment","html","DOMParser","parseFromString","body","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","$onRouterChange","callbck","WatchRouterChange","$NavigateTo","context","attachObj","newcontext","assign","$attachObj","eval","repository","id","Id","ComponentAutoId","count","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","templateUrl","template","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","const_2","plug_node_1","vnode_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","styleJson","this_1","newvalue","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","_RouterInfo","path","getParam","active","previous","listeners","listen","DEPRECATED","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","_a","pop","splice","shift","func","firstget","watcher","notices","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","$checkProp","$element","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","$GetFenceNode","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","instance","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","classJson","classList","add","remove","Style","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","cur","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Rio\"] = factory();\n\telse\n\t\troot[\"Rio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"anchor\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string){\n    if(char.length>1)\n        throw new Error(\"only receve one character\")\n    let start=-1\n    while(str[start+1]==char){\n        start++\n    }\n    let end=str.length\n    while(str[end-1]==char){\n        end--\n    }\n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { DomStatus } from './../models';\nimport { VinallaNode } from './vinalla-node';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=-1\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    routers.forEach(router=>{\n        router.urls=router.urls.map(url=>{\n            if(url.indexOf(\"/\")!=0)\n                return \"/\"+url\n            else\n                return url\n        })\n    })\n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        \n        if(router.redirect==null && router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.redirect==null && router.url==null && router.urls==null){\n            throw new Error(\"must specify url or urls in router\")\n        }\n        router.params=router.params?router.params:[]\n        router.urls=router.urls?router.urls:[]\n        if(router.url!=null)\n            router.urls.push(router.url)\n        checkRouter(router.children)\n    })\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        urls:router.urls,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrls:[],\n        params:router.params,\n        redirect:router.redirect\n    }\n    if(parent!=null){\n        r.urls.forEach(url=>{\n            parent.fullUrls.forEach(fullurl=>{\n                r.fullUrls.push(fullurl+url)\n            })\n        })\n    }else{\n        r.urls.forEach(url=>r.fullUrls.push(url))\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\nfunction matchRouter(matchedRouter:InnerRouter):{name:string,value:string}[]{\n    let vinallaUrl=location.pathname\n    while(vinallaUrl.endsWith(\"/\")){\n        vinallaUrl=vinallaUrl.substr(0,vinallaUrl.length-1)\n    }\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    for(let i=0;i<matchedRouter.fullUrls.length;i++){\n        let matchedUrl=matchedRouter.fullUrls[i];\n        let matchedSlice=matchedUrl.split(\"/\");\n        if(vinallaSlice.length!=matchedSlice.length)\n            continue;\n        let params:{name:string,value:string}[]=[];\n        for(var j=0;j<matchedSlice.length;j++){\n            if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n                if(vinallaSlice[j]!=\"\"){\n                    let name=RegExp.$1\n                    params.push({name:name,value:vinallaSlice[j]})\n                    continue;\n                }else{\n                    break\n                }\n            }\n            if(matchedSlice[j]==vinallaSlice[j]){\n                continue;\n            }\n            break;\n        }\n        if(j==matchedSlice.length){\n            let requireParams=matchedRouter.params;\n            let searchParams=getSearchParams();\n            params=params.concat(searchParams);\n            requireParams.forEach(rp=>{\n                let exist=params.find(p=>p.name==rp.name);\n                if(exist==null && rp.required){\n                    throw new Error(\"router match failed,no matched params:\"+rp.name);\n                }\n            })\n            return params;\n        }\n    }\n    return null;\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\n\n\nfunction flatRouter(r:InnerRouter):InnerRouter[]{\n    let routers:InnerRouter[]=[r];\n    r.children.forEach(child=>{\n        routers=routers.concat(flatRouter(child));\n    });\n    return routers;\n}\nfunction matchUrl(){\n    matchedRouter=[];\n\n    let routers:InnerRouter[]=[]\n\n    appRouters.forEach(r=>{\n        routers=routers.concat(flatRouter(r))\n    });\n\n    let redirect=false\n    for(let i=0;i<routers.length;i++){\n        let router=routers[i]\n        if(router.redirect!=null){\n            SetActiveRouter(location.pathname,[]);\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let params=matchRouter(router)\n        if(params!=null){\n            SetActiveRouter(location.pathname,params)\n            matchedRouter=[router]\n            let parent=router.parent\n            while(parent!=null){\n                matchedRouter.unshift(parent)\n                parent=parent.parent\n            }\n            break\n        }\n    }\n    if(redirect){\n        matchUrl()\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):IComponentMvvm{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==-1){\n        matchUrl()\n        firstVNode=vnode\n        cursor=0\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\nexport interface Router extends _Router{\n    url?: string\n}\nexport interface _Router{\n    urls?:string[]\n    component?: IComponentMvvm\n    components?:{[name:string]:IComponentMvvm}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends _Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrls:string[]\n}\n\nexport function NotifyUrlChange(){\n    matchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter, WatchRouterChange } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterInfo } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { NotifyUrlChange } from '../router/router-manager';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router(){\n        return GetActiveRouter()\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    GetAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.GetAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    protected $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    protected $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**监视路由变化 */\n    protected $onRouterChange(callbck:(newrouter:RouterInfo,oldrouter:RouterInfo)=>void){\n        WatchRouterChange(this.$treeRoot,callbck);\n    }\n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nlet id=0;\nexport function ComponentAutoId(){\n    let count=id++;\n    let str=\"\";\n    while(count>0){\n        str+=\"_\";\n        count--;\n    }\n    return str;\n}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\n\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { PRE } from './../const';\nimport { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\nimport { ParseStyle } from '../util';\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render()\n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n                \n        }\n        if(this.styles[PRE+'style']!=null){\n            let exp=this.styles[PRE+'style'];\n            let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n            if(!reg.test(exp)){\n                throw new Error(\"exp format error:\"+exp);\n            }\n            let styleJson=ParseStyle(exp);\n            for(let key in styleJson){\n                let watcher=this.mvvm.$CreateWatcher(this,styleJson[key],(newvalue)=>{\n                    if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                        ((dom.dom as HTMLElement).style as any)[key]=newvalue;\n                    }else{\n                        ((dom.dom as HTMLElement).style as any)[key]=\"\";\n                    }\n                });\n                let value=watcher.GetCurValue();\n                if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                    ((dom.dom as HTMLElement).style as any)[key]=value;\n                }\n            }\n        }\n        this.DomSet=[dom]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[]);\nlet previous:RouterInfo=null;\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    previous=active;\n    active=new _RouterInfo(path,params)\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,previous)\n    })\n}\nexport function GetActiveRouter(){\n    return {active:active,previous:previous}\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { DomStatus } from '../models';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    \n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { MoveBack, NextRouter } from \"../router/router-manager\";\nimport { VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { IComponentMvvm } from './../models';\nimport { CustomNode } from \"./custom-node\";\nimport { VNode } from \"./vnode\";\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let constructor=NextRouter(this);\n        //释放旧的资源\n        this.Children.forEach(child=>{\n            child.SetStatus(VNodeStatus.DEPRECATED);\n            child.OnDestroy();\n        });\n\n        if(constructor!=null){\n            let vnode=this.instance(constructor)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    private instance(construct:IComponentMvvm):VNode{\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name?:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\n\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\n\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n\n        let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let classJson=ParseStyle(exp);\n        for(let key in classJson){            \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(value){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let styleJson=ParseStyle(exp);\n        for(let key in styleJson){\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n                if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n                }else{\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n            }\n        }\n    }\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            });\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { Watcher } from './../observer/watcher';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\";\n    if(isconst){\n        let streval=StrToEvalstr(exp)\n        if(streval.isconst){\n            href=streval.exp;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n        }\n        else{                \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n            href=watcher.GetCurValue();\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",href);\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            href=newvalue;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n        });\n        href=watcher.GetCurValue();\n    }\n        \n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.mvvm.$NavigateTo(href);\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { GetDomTree, RegisterComponent, InitComponent, ComponentAutoId } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { NewVNode } from '../vdom/vdom';\nimport { VNode } from '../vnode/vnode';\nimport { DomStatus, Event, IComponentMvvm } from './../models';\nimport { FetchProperty } from './property';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                //以防页面组件未初始化\n                InitComponent(this.$InitName(),this.$InitNamespace());\n\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        if(option.name==null)\n            option.name=target.name.toLowerCase()+ComponentAutoId();\n        RegisterComponent(option.name,option.namespace,constructor,option);\n        return (constructor as any);\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}