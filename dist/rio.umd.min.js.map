{"version":3,"sources":["webpack://Rio/webpack/universalModuleDefinition","webpack://Rio/webpack/bootstrap","webpack://Rio/./src/const.ts","webpack://Rio/./src/util.ts","webpack://Rio/./src/vnode/vnode.ts","webpack://Rio/./src/vdom/vdom.ts","webpack://Rio/./src/decorator/property.ts","webpack://Rio/./src/manager/components-manager.ts","webpack://Rio/./src/router/router-manager.ts","webpack://Rio/./src/observer/watcher.ts","webpack://Rio/./src/mvvm/mvvm.ts","webpack://Rio/./src/eval.js","webpack://Rio/./src/manager/start.ts","webpack://Rio/./src/vnode/custom-node.ts","webpack://Rio/./src/router/router-state.ts","webpack://Rio/./src/observer/observer.ts","webpack://Rio/./src/observer/notice-center.ts","webpack://Rio/./src/manager/directive-manager.ts","webpack://Rio/./src/manager/app-manager.ts","webpack://Rio/./src/mvvm/directive-mvvm.ts","webpack://Rio/./src/mvvm/app-mvvm.ts","webpack://Rio/./src/mvvm/component-mvvm.ts","webpack://Rio/./src/decorator/directive.ts","webpack://Rio/./src/decorator/app.ts","webpack://Rio/./src/vnode/plug-node.ts","webpack://Rio/./src/vnode/router-node.ts","webpack://Rio/./src/vnode/template-node.ts","webpack://Rio/./src/vnode/if-node.ts","webpack://Rio/./src/observer/msg-queue.ts","webpack://Rio/./src/observer/watcher-collect.ts","webpack://Rio/./src/models.ts","webpack://Rio/./src/vnode/for-node.ts","webpack://Rio/./src/vnode/slot-node.ts","webpack://Rio/./src/vnode/directive-node.ts","webpack://Rio/./src/directive/class.ts","webpack://Rio/./src/directive/style.ts","webpack://Rio/./src/directive/html.ts","webpack://Rio/./src/directive/onclick.ts","webpack://Rio/./src/directive/model.ts","webpack://Rio/./src/directive/href.ts","webpack://Rio/./src/directive/inner-dir.ts","webpack://Rio/./src/vnode/vinalla-node.ts","webpack://Rio/./src/decorator/component.ts","webpack://Rio/./src/main.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","NavigateTo","$IsRoot","$NavigateTo","$GetFenceNode","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","repository","Id","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","templateUrl","template","DOMParser","parseFromString","body","children","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrls","params","j","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","matchUrl","clearMark","router","marked","routers","getLeaf","redirect","history","replaceState","SetActiveRouter","parent_1","unshift","RegisterRouter","checkRouter","component","components","urls","map","copyRouter","fullurl","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","active","GetActiveRouter","cur","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","GetAnchorNode","$AddFragment","html","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","context","attachObj","newcontext","assign","$attachObj","eval","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","const_2","plug_node_1","vnode_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","styleJson","this_1","newvalue","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","_RouterInfo","path","getParam","listeners","old","listen","DEPRECATED","WatchRouterChange","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","_a","pop","splice","shift","func","firstget","watcher","notices","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","$checkProp","$element","router_manager_1","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","instance","componentStr","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","classJson","classList","add","remove","Style","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Rio\"] = factory();\n\telse\n\t\troot[\"Rio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"anchor\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string){\n    if(char.length>1)\n        throw new Error(\"only receve one character\")\n    let start=-1\n    while(str[start+1]==char){\n        start++\n    }\n    let end=str.length\n    while(str[end-1]==char){\n        end--\n    }\n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { VinallaNode } from './vinalla-node';\nimport { DomStatus } from './../models';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { AppMvvm } from './../mvvm/app-mvvm';\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    NavigateTo(url:string):void{\n        if(this.mvvm.$IsRoot()){\n            (this.mvvm as AppMvvm).$NavigateTo(url)\n        }else{\n            if(this.Parent!=null)\n                this.Parent.NavigateTo(url);\n            else{\n                (<ComponentMvvm>this.mvvm).$GetFenceNode().NavigateTo(url);\n            }\n        }\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=-1\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    routers.forEach(router=>{\n        router.urls=router.urls.map(url=>{\n            if(url.indexOf(\"/\")!=0)\n                return \"/\"+url\n            else\n                return url\n        })\n    })\n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        if(router.redirect!=null){\n            router.component=\"\"\n            router.url=\"\"\n        }\n        if(router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.url==null && router.urls==null){\n            throw new Error(\"must specify url or urls in router\")\n        }\n        router.params=router.params?router.params:[]\n        router.urls=router.urls?router.urls:[]\n        if(router.url!=null)\n            router.urls.push(router.url)\n        checkRouter(router.children)\n    })\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        urls:router.urls,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrls:[],\n        params:router.params,\n        redirect:router.redirect,\n        marked:false\n    }\n    if(parent!=null){\n        r.urls.forEach(url=>{\n            parent.fullUrls.forEach(fullurl=>{\n                if(url.indexOf(\"/\")==0){\n                    r.fullUrls.push(url)\n                }else{\n                    if(url==\"\")\n                        r.fullUrls.push(fullurl)\n                    else\n                        r.fullUrls.push(fullurl+\"/\"+url)\n                }\n            })\n        })\n    }else{\n        r.urls.forEach(url=>r.fullUrls.push(url))\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\nfunction matchRouter(matchedRouter:InnerRouter):{name:string,value:string}[]{\n    let vinallaUrl=location.pathname\n    while(vinallaUrl.endsWith(\"/\")){\n        vinallaUrl=vinallaUrl.substr(0,vinallaUrl.length-1)\n    }\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    for(let i=0;i<matchedRouter.fullUrls.length;i++){\n        let matchedUrl=matchedRouter.fullUrls[i];\n        let matchedSlice=matchedUrl.split(\"/\");\n        if(vinallaSlice.length!=matchedSlice.length)\n            continue;\n        let params:{name:string,value:string}[]=[];\n        for(var j=0;j<matchedSlice.length;j++){\n            if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n                if(vinallaSlice[j]!=\"\"){\n                    let name=RegExp.$1\n                    params.push({name:name,value:vinallaSlice[j]})\n                    continue;\n                }else{\n                    break\n                }\n            }\n            if(matchedSlice[j]==vinallaSlice[j]){\n                continue;\n            }\n            break;\n        }\n        if(j==matchedSlice.length){\n            let requireParams=matchedRouter.params;\n            let searchParams=getSearchParams();\n            params=params.concat(searchParams);\n            requireParams.forEach(rp=>{\n                let exist=params.find(p=>p.name==rp.name);\n                if(exist==null && rp.required){\n                    throw new Error(\"router match failed,no matched params:\"+rp.name);\n                }\n            })\n            return params;\n        }\n    }\n    return null;\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\nfunction getLeaf(router:InnerRouter):InnerRouter[]{\n    if(router.marked)\n        return []\n    if(router.children.length==0){\n        router.marked=true\n        return [router];\n    }\n    \n    let res:InnerRouter[]=[]\n    router.children.forEach(child=>{\n        res=res.concat(getLeaf(child))\n    })\n    if(res.length==0){\n        router.marked=true\n        return [router];\n    }\n    return res\n}\nfunction clearMark(router:InnerRouter){\n    router.children.forEach(child=>{\n        clearMark(child)\n    })\n    router.marked=false\n}\nfunction matchUrl(){\n    appRouters.forEach(r=>clearMark(r))\n\n    let routers:InnerRouter[]=[]\n\n    while(true){\n        let res:InnerRouter[]=[]\n        appRouters.forEach(r=>{\n            res=res.concat(getLeaf(r))\n        })\n        if(res.length==0){\n            break\n        }else{\n            routers=routers.concat(res)\n        }\n    }\n\n    let redirect=false\n    for(let i=0;i<routers.length;i++){\n        let router=routers[i]\n        if(router.redirect!=null){\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let params=matchRouter(router)\n        if(params!=null){\n            SetActiveRouter(location.pathname,params)\n            matchedRouter=[router]\n            let parent=router.parent\n            while(parent!=null){\n                matchedRouter.unshift(parent)\n                parent=parent.parent\n            }\n            break\n        }\n    }\n    if(redirect){\n        matchUrl()\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):string{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==-1){\n        matchUrl()\n        firstVNode=vnode\n        cursor=0\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\nexport interface Router extends _Router{\n    url?: string\n}\nexport interface _Router{\n    urls?:string[]\n    component?: string\n    components?:{[name:string]:string}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends _Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrls:string[],\n    marked:boolean\n}\n\nexport function NotifyUrlChange(){\n    matchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterState } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router():RouterState{\n        return {\n            active:GetActiveRouter(),\n            cur:null\n        }\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    GetAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.GetAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\n\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { PRE } from './../const';\nimport { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\nimport { ParseStyle } from '../util';\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render()\n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n                \n        }\n        if(this.styles[PRE+'style']!=null){\n            let exp=this.styles[PRE+'style'];\n            let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n            if(!reg.test(exp)){\n                throw new Error(\"exp format error:\"+exp);\n            }\n            let styleJson=ParseStyle(exp);\n            for(let key in styleJson){\n                let watcher=this.mvvm.$CreateWatcher(this,styleJson[key],(newvalue)=>{\n                    if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                        ((dom.dom as HTMLElement).style as any)[key]=newvalue;\n                    }else{\n                        ((dom.dom as HTMLElement).style as any)[key]=\"\";\n                    }\n                });\n                let value=watcher.GetCurValue();\n                if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                    ((dom.dom as HTMLElement).style as any)[key]=value;\n                }\n            }\n        }\n        this.DomSet=[dom]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[])\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    let old:RouterInfo=new _RouterInfo(path,params)\n    \n    active.path=path\n    active.params=params\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,old)\n    })\n}\nexport function GetActiveRouter(){\n    return active\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { NotifyUrlChange } from '../router/router-manager';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nimport { DomStatus } from '../models';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomType, VNodeStatus } from './../const';\nimport { VNode } from \"./vnode\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { CustomNode } from \"./custom-node\";\nimport { InitComponent } from \"../manager/components-manager\";\nimport { GetNS } from '../util';\nimport { VDom } from '../vdom/vdom';\nimport { NextRouter, MoveBack } from \"../router/router-manager\";\nimport { DomStatus } from '../models';\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let router=NextRouter(this);\n        //释放旧的资源\n        this.Children.forEach(child=>{\n            child.SetStatus(VNodeStatus.DEPRECATED);\n            child.OnDestroy();\n        });\n        \n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    private instance(componentStr:string):VNode{\n\n        let ns=GetNS(componentStr)\n        if(ns.namespace==null)\n            ns.namespace=\"default\"\n        let construct=InitComponent(ns.value,ns.namespace)\n        \n        if(construct==null){\n            throw new Error(`router can not find component name:${ns.value},namespace:${ns.namespace}`)\n        }\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\nexport interface RouterState{\n    active:RouterInfo,\n    cur:RouterInfo\n}\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n\n        let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let classJson=ParseStyle(exp);\n        for(let key in classJson){            \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(value){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let styleJson=ParseStyle(exp);\n        for(let key in styleJson){\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n                if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n                }else{\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n            }\n        }\n    }\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            });\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { Watcher } from './../observer/watcher';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\"\n    if(vnode.DomSet[0].dom.nodeName.toLowerCase()==\"a\"){\n        if(isconst){\n            let streval=StrToEvalstr(exp)\n            if(streval.isconst){\n                href=streval.exp;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n            }\n            else{                \n                let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                    href=newvalue;\n                    (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n                });\n                href=watcher.GetCurValue();\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",href);\n            }\n        }else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n            href=watcher.GetCurValue();\n        }\n        \n    }\n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.NavigateTo(href)\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { IComponentMvvm, Event, DomStatus } from './../models';\nimport { RegisterComponent, GetDomTree } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { FetchProperty } from './property';\nimport { VNode } from '../vnode/vnode';\nimport { NewVNode } from '../vdom/vdom';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        RegisterComponent(option.name,option.namespace,constructor,option)\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}