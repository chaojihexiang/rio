{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.ts","webpack:///./src/util.ts","webpack:///./src/vnode/vnode.ts","webpack:///./src/vdom/vdom.ts","webpack:///./src/decorator/property.ts","webpack:///./src/router/router-manager.ts","webpack:///./src/observer/watcher.ts","webpack:///./src/mvvm/mvvm.ts","webpack:///./src/eval.js","webpack:///./src/manager/components-manager.ts","webpack:///./src/manager/start.ts","webpack:///./src/vnode/custom-node.ts","webpack:///./src/observer/observer.ts","webpack:///./src/observer/notice-center.ts","webpack:///./src/manager/directive-manager.ts","webpack:///./src/router/router-state.ts","webpack:///./src/manager/app-manager.ts","webpack:///./src/mvvm/directive-mvvm.ts","webpack:///./src/mvvm/app-mvvm.ts","webpack:///./src/mvvm/component-mvvm.ts","webpack:///./src/decorator/directive.ts","webpack:///./src/decorator/app.ts","webpack:///./src/vnode/plug-node.ts","webpack:///./src/vnode/router-node.ts","webpack:///./src/vnode/template-node.ts","webpack:///./src/vnode/if-node.ts","webpack:///./src/observer/msg-queue.ts","webpack:///./src/observer/watcher-collect.ts","webpack:///./src/models.ts","webpack:///./src/vnode/for-node.ts","webpack:///./src/vnode/slot-node.ts","webpack:///./src/vnode/directive-node.ts","webpack:///./src/directive/class.ts","webpack:///./src/directive/style.ts","webpack:///./src/directive/html.ts","webpack:///./src/directive/onclick.ts","webpack:///./src/directive/model.ts","webpack:///./src/directive/href.ts","webpack:///./src/directive/inner-dir.ts","webpack:///./src/vnode/vinalla-node.ts","webpack:///./src/decorator/component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","direction","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","root","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrl","params","j","matchtype","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","StartMatchUrl","redirect","execs","router","SetActiveRouter","window","history","replaceState","children","RegisterRouter","routers","checkRouter","component","components","copyRouter","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","router_manager_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","GetActiveRouter","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$IsRoot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","GetAnchorNode","$AddFragment","html","DOMParser","parseFromString","body","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","$onRouterChange","callbck","WatchRouterChange","$NavigateTo","context","attachObj","newcontext","assign","$attachObj","eval","repository","id","Id","ComponentAutoId","count","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","factory","templateUrl","template","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","const_2","plug_node_1","vnode_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","styleJson","this_1","newvalue","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","_a","pop","splice","shift","func","firstget","watcher","notices","DEPRECATED","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","_RouterInfo","path","getParam","active","previous","listeners","listen","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","$checkProp","$element","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","$GetFenceNode","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","instance","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","classJson","classList","add","remove","Style","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","cur","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"anchor\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string,direction:\"both\"|\"left\"|\"right\"=\"both\"){\n    if(char.length>1)\n        throw new Error(\"only receve one character\");\n    let start=-1;\n    if(direction==\"both\" || direction==\"left\"){\n        while(str[start+1]==char){\n            start++\n        }\n    }\n    \n    let end=str.length;\n    if(direction==\"both\"||direction==\"right\"){\n        while(str[end-1]==char){\n            end--\n        }\n    }\n    \n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { DomStatus } from './../models';\nimport { VinallaNode } from './vinalla-node';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError, Trim } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=0;\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    \n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        \n        if(router.redirect==null && router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.url!=null)\n            router.url=Trim(router.url.trim(),\"/\",\"right\");\n        if(router.redirect==null && (router.url==null || router.url==\"\")){\n            throw new Error(\"must specify url in router\")\n        }\n        router.params=router.params?router.params:[];\n        if(router.redirect==null){\n            if(router.url.indexOf(\"/\")!=0)\n                router.url= \"/\"+router.url;\n        }\n        checkRouter(router.children)\n    });\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        url:router.url,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrl:\"\",\n        params:router.params,\n        redirect:router.redirect\n    }\n    if(parent!=null){\n        r.fullUrl=parent.fullUrl+router.url;\n    }else{\n        r.fullUrl=router.url;\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\n/**\n * matchtype 0 完全匹配  1 matchedRouter是当前location的前缀  2 不匹配\n */\nfunction matchRouter(matchedRouter:InnerRouter):{matchtype:number,params:{name:string,value:string}[]}{\n    let vinallaUrl=location.pathname\n    vinallaUrl=Trim(vinallaUrl,\"/\",\"right\");\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    let matchedSlice=matchedRouter.fullUrl.split(\"/\");\n    let params:{name:string,value:string}[]=[];\n    for(var j=0;j<matchedSlice.length;j++){\n        if(vinallaSlice.length-1<j){\n            return {matchtype:2,params:[]};\n        }\n        if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n            let name=RegExp.$1\n            params.push({name:name,value:vinallaSlice[j]})\n            continue;\n        }\n        if(matchedSlice[j]==vinallaSlice[j]){\n            continue;\n        }\n        return {matchtype:2,params:[]};\n    }\n    \n    let requireParams=matchedRouter.params;\n    let searchParams=getSearchParams();\n    params=params.concat(searchParams);\n    requireParams.forEach(rp=>{\n        let exist=params.find(p=>p.name==rp.name);\n        if(exist==null && rp.required){\n            throw new Error(\"router match failed,no matched params:\"+rp.name);\n        }\n    })\n    if(j==vinallaSlice.length){\n        return {matchtype:0,params:params};\n    }else{\n        return {matchtype:1,params:params};\n    }\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\n\n\n\nexport function StartMatchUrl(){\n    matchedRouter=[];\n\n    let redirect=false;\n\n    let execs=appRouters;\n    let start=0;\n    let find=false;\n    while(true){\n        if(start>execs.length-1){\n            break;\n        }\n        let router=execs[start]\n        if(router.redirect!=null){\n            SetActiveRouter(location.pathname,[]);\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let res=matchRouter(router);\n        if(res.matchtype==2){\n            start++;\n            continue;\n        }\n        if(res.matchtype==1){\n            matchedRouter.push(router);\n            start=0;\n            execs=router.children;\n            continue;\n        }\n        if(res.matchtype==0){\n            SetActiveRouter(location.pathname,res.params);\n            matchedRouter.push(router);\n            find=true;\n            break\n        }\n    }\n    \n    if(redirect){\n        StartMatchUrl()\n    }\n    if(!find){\n        throw new Error(\"router not matched\");\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):IComponentMvvm{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==0){\n        firstVNode=vnode\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\n\nexport interface Router{\n    url?:string\n    component?: IComponentMvvm\n    components?:{[name:string]:IComponentMvvm}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrl:string\n}\n\nexport function NotifyUrlChange(){\n    StartMatchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter, WatchRouterChange } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterInfo } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { NotifyUrlChange } from '../router/router-manager';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router(){\n        return GetActiveRouter()\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    GetAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.GetAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    protected $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    protected $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**监视路由变化 */\n    protected $onRouterChange(callbck:(newrouter:RouterInfo,oldrouter:RouterInfo)=>void){\n        WatchRouterChange(this.$treeRoot,callbck);\n    }\n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nlet id=0;\nexport function ComponentAutoId(){\n    let count=id++;\n    let str=\"\";\n    while(count>0){\n        str+=\"_\";\n        count--;\n    }\n    return str;\n}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\nimport {StartMatchUrl} from \"../router/router-manager\"\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        StartMatchUrl()\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { PRE } from './../const';\nimport { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\nimport { ParseStyle } from '../util';\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render()\n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n                \n        }\n        if(this.styles[PRE+'style']!=null){\n            let exp=this.styles[PRE+'style'];\n            let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n            if(!reg.test(exp)){\n                throw new Error(\"exp format error:\"+exp);\n            }\n            let styleJson=ParseStyle(exp);\n            for(let key in styleJson){\n                let watcher=this.mvvm.$CreateWatcher(this,styleJson[key],(newvalue)=>{\n                    if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                        ((dom.dom as HTMLElement).style as any)[key]=newvalue;\n                    }else{\n                        ((dom.dom as HTMLElement).style as any)[key]=\"\";\n                    }\n                });\n                let value=watcher.GetCurValue();\n                if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                    ((dom.dom as HTMLElement).style as any)[key]=value;\n                }\n            }\n        }\n        this.DomSet=[dom]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[]);\nlet previous:RouterInfo=null;\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    previous=active;\n    active=new _RouterInfo(path,params)\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,previous)\n    })\n}\nexport function GetActiveRouter(){\n    return {active:active,previous:previous}\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { DomStatus } from '../models';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    \n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { MoveBack, NextRouter } from \"../router/router-manager\";\nimport { VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { IComponentMvvm } from './../models';\nimport { CustomNode } from \"./custom-node\";\nimport { VNode } from \"./vnode\";\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let constructor=NextRouter(this);\n        //释放旧的资源\n        this.Children.forEach(child=>{\n            child.SetStatus(VNodeStatus.DEPRECATED);\n            child.OnDestroy();\n        });\n\n        if(constructor!=null){\n            let vnode=this.instance(constructor)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    private instance(construct:IComponentMvvm):VNode{\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name?:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\n\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\n\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n\n        let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let classJson=ParseStyle(exp);\n        for(let key in classJson){            \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(value){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let styleJson=ParseStyle(exp);\n        for(let key in styleJson){\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n                if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n                }else{\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n            }\n        }\n    }\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            });\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { Watcher } from './../observer/watcher';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\";\n    if(isconst){\n        let streval=StrToEvalstr(exp)\n        if(streval.isconst){\n            href=streval.exp;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n        }\n        else{                \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n            href=watcher.GetCurValue();\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",href);\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            href=newvalue;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n        });\n        href=watcher.GetCurValue();\n    }\n        \n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.mvvm.$NavigateTo(href);\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { GetDomTree, RegisterComponent, InitComponent, ComponentAutoId } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { NewVNode } from '../vdom/vdom';\nimport { VNode } from '../vnode/vnode';\nimport { DomStatus, Event, IComponentMvvm } from './../models';\nimport { FetchProperty } from './property';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                //以防页面组件未初始化\n                InitComponent(this.$InitName(),this.$InitNamespace());\n\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        if(option.name==null)\n            option.name=target.name.toLowerCase()+ComponentAutoId();\n        RegisterComponent(option.name,option.namespace,constructor,option);\n        return (constructor as any);\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}