{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.ts","webpack:///./src/util.ts","webpack:///./src/vnode/vnode.ts","webpack:///./src/vdom/vdom.ts","webpack:///./src/decorator/property.ts","webpack:///./src/manager/components-manager.ts","webpack:///./src/router/router-manager.ts","webpack:///./src/mvvm/mvvm.ts","webpack:///./src/manager/start.ts","webpack:///./src/vnode/custom-node.ts","webpack:///./src/observer/watcher.ts","webpack:///./src/observer/observer.ts","webpack:///./src/router/router-state.ts","webpack:///./src/eval.js","webpack:///./src/manager/directive-manager.ts","webpack:///./src/manager/app-manager.ts","webpack:///./src/mvvm/directive-mvvm.ts","webpack:///./src/mvvm/app-mvvm.ts","webpack:///./src/mvvm/component-mvvm.ts","webpack:///./src/decorator/directive.ts","webpack:///./src/decorator/app.ts","webpack:///./src/vnode/plug-node.ts","webpack:///./src/vnode/router-node.ts","webpack:///./src/vnode/template-node.ts","webpack:///./src/vnode/if-node.ts","webpack:///./src/observer/msg-queue.ts","webpack:///./src/observer/watcher-collect.ts","webpack:///./src/models.ts","webpack:///./src/vnode/for-node.ts","webpack:///./src/vnode/slot-node.ts","webpack:///./src/vnode/directive-node.ts","webpack:///./src/directive/class.ts","webpack:///./src/directive/style.ts","webpack:///./src/directive/html.ts","webpack:///./src/directive/onclick.ts","webpack:///./src/directive/model.ts","webpack:///./src/directive/href.ts","webpack:///./src/directive/inner-dir.ts","webpack:///./src/vnode/vinalla-node.ts","webpack:///./src/decorator/component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","vdom_1","VNode","Vdom","mvvm","Parent","this","attrs","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","forEach","concat","Rerender","filter","dom","type","DELETE","OnRemoved","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","NavigateTo","$IsRoot","$NavigateTo","$GetFenceNode","GetNodeName","toLowerCase","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","root","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","destroyFuncs","Data","target","key","Computed","descriptor","Prop","required","OnInit","OnDestroy","FetchProperty","repository","Id","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","factory","templateUrl","template","DOMParser","parseFromString","body","children","styleUrl","style","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","substr","vinallaSlice","matchedSlice","fullUrls","params","j","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","matchUrl","clearMark","router","marked","routers","getLeaf","redirect","window","history","replaceState","SetActiveRouter","parent_1","unshift","RegisterRouter","checkRouter","component","components","urls","map","indexOf","copyRouter","fullurl","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","eval_1","watcher_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","active","GetActiveRouter","cur","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","$GetExpOrFunValue","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","watchingArrayItem","Watcher","$OnDestroy","$SetRoot","isroot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","plug_node_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","Render","doms","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","Update","$Update","$SetStatus","ExpOrFunc","cb","deepRecord","getValue","SetTarget","CleanTarget","GetVNode","newval","diff","$target","watcher_collect_1","data","reactiveKey","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","_a","pop","splice","shift","func","firstget","_RouterInfo","path","getParam","listeners","listen","DEPRECATED","WatchRouterChange","context","attachObj","newcontext","assign","$attachObj","eval","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","RegisterApp","DirectiveMVVM","$directive","$vnode","$Ins","$Outs","$InitFuncs","$DestroyFuncs","destroy","$element","init","inName","$Name","newvalue","$checkProp","oldvalue","router_manager_1","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","node","$GetIns","property_1","directive_manager_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","directive","$Namespace","$Out","checkAppOption","$AppMvvm","el","vdom","vnode_1","custom_node_1","instance","componentStr","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","watcher","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","const_2","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","hacked","classes_1","classList","add","remove","Style","styleexp","istrue","styles","stylename","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","$2","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","vanillaAttrs","this_1","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","evalexp","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","domtree","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_]\\w*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI } from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string){\n    if(char.length>1)\n        throw new Error(\"only receve one character\")\n    let start=-1\n    while(str[start+1]==char){\n        start++\n    }\n    let end=str.length\n    while(str[end-1]==char){\n        end--\n    }\n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}","import { DomStatus } from './../models';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { AppMvvm } from './../mvvm/app-mvvm';\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nexport abstract class VNode {\n    protected nodeValue: string\n    protected nodeName: string\n    protected nodeType: number\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = []\n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Rerender():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Rerender())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnRemoved(){\n        this.Children.forEach(child=>{\n            child.OnRemoved()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    NavigateTo(url:string):void{\n        if(this.mvvm.$IsRoot()){\n            (this.mvvm as AppMvvm).$NavigateTo(url)\n        }else{\n            if(this.Parent!=null)\n                this.Parent.NavigateTo(url);\n            else{\n                (<ComponentMvvm>this.mvvm).$GetFenceNode().NavigateTo(url);\n            }\n        }\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string){\n        this.Attrs.push({Name:attr,Value:\"\"})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.replace(/\\s+/g,\"\")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[]\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Data(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    props.push({\n        name:name,\n        required:required,\n        type:type\n    })\n    return function(target:any,key:string){}\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[]\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=-1\nlet firstVNode:VNode=null\nexport function RegisterRouter(routers:Router[]){\n    checkRouter(routers)\n    routers.forEach(router=>{\n        router.urls=router.urls.map(url=>{\n            if(url.indexOf(\"/\")!=0)\n                return \"/\"+url\n            else\n                return url\n        })\n    })\n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        if(router.redirect!=null){\n            router.component=\"\"\n            router.url=\"\"\n        }\n        if(router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.url==null && router.urls==null){\n            throw new Error(\"must specify url or urls in router\")\n        }\n        router.params=router.params?router.params:[]\n        router.urls=router.urls?router.urls:[]\n        if(router.url!=null)\n            router.urls.push(router.url)\n        checkRouter(router.children)\n    })\n}\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        urls:router.urls,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrls:[],\n        params:router.params,\n        redirect:router.redirect,\n        marked:false\n    }\n    if(parent!=null){\n        r.urls.forEach(url=>{\n            parent.fullUrls.forEach(fullurl=>{\n                if(url.indexOf(\"/\")==0){\n                    r.fullUrls.push(url)\n                }else{\n                    if(url==\"\")\n                        r.fullUrls.push(fullurl)\n                    else\n                        r.fullUrls.push(fullurl+\"/\"+url)\n                }\n            })\n        })\n    }else{\n        r.urls.forEach(url=>r.fullUrls.push(url))\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\nfunction matchRouter(matchedRouter:InnerRouter):{name:string,value:string}[]{\n    let vinallaUrl=location.pathname\n    while(vinallaUrl.endsWith(\"/\")){\n        vinallaUrl=vinallaUrl.substr(0,vinallaUrl.length-1)\n    }\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    for(let i=0;i<matchedRouter.fullUrls.length;i++){\n        let matchedUrl=matchedRouter.fullUrls[i];\n        let matchedSlice=matchedUrl.split(\"/\");\n        if(vinallaSlice.length!=matchedSlice.length)\n            continue;\n        let params:{name:string,value:string}[]=[];\n        for(var j=0;j<matchedSlice.length;j++){\n            if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n                if(vinallaSlice[j]!=\"\"){\n                    let name=RegExp.$1\n                    params.push({name:name,value:vinallaSlice[j]})\n                    continue;\n                }else{\n                    break\n                }\n            }\n            if(matchedSlice[j]==vinallaSlice[j]){\n                continue;\n            }\n            break;\n        }\n        if(j==matchedSlice.length){\n            let requireParams=matchedRouter.params;\n            let searchParams=getSearchParams();\n            params=params.concat(searchParams);\n            requireParams.forEach(rp=>{\n                let exist=params.find(p=>p.name==rp.name);\n                if(exist==null && rp.required){\n                    throw new Error(\"router match failed,no matched params:\"+rp.name);\n                }\n            })\n            return params;\n        }\n    }\n    return null;\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\nfunction getLeaf(router:InnerRouter):InnerRouter[]{\n    if(router.marked)\n        return []\n    if(router.children.length==0){\n        router.marked=true\n        return [router];\n    }\n    \n    let res:InnerRouter[]=[]\n    router.children.forEach(child=>{\n        res=res.concat(getLeaf(child))\n    })\n    if(res.length==0){\n        router.marked=true\n        return [router];\n    }\n    return res\n}\nfunction clearMark(router:InnerRouter){\n    router.children.forEach(child=>{\n        clearMark(child)\n    })\n    router.marked=false\n}\nfunction matchUrl(){\n    appRouters.forEach(r=>clearMark(r))\n\n    let routers:InnerRouter[]=[]\n\n    while(true){\n        let res:InnerRouter[]=[]\n        appRouters.forEach(r=>{\n            res=res.concat(getLeaf(r))\n        })\n        if(res.length==0){\n            break\n        }else{\n            routers=routers.concat(res)\n        }\n    }\n\n    let redirect=false\n    for(let i=0;i<routers.length;i++){\n        let router=routers[i]\n        if(router.redirect!=null){\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let params=matchRouter(router)\n        if(params!=null){\n            SetActiveRouter(location.pathname,params)\n            matchedRouter=[router]\n            let parent=router.parent\n            while(parent!=null){\n                matchedRouter.unshift(parent)\n                parent=parent.parent\n            }\n            break\n        }\n    }\n    if(redirect){\n        matchUrl()\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):string{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==-1){\n        matchUrl()\n        firstVNode=vnode\n        cursor=0\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        throw new Error(\"router match failed\")\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\nexport interface Router extends _Router{\n    url?: string\n}\nexport interface _Router{\n    urls?:string[]\n    component?: string\n    components?:{[name:string]:string}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends _Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrls:string[],\n    marked:boolean\n}\n\nexport function NotifyUrlChange(){\n    matchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { GetActiveRouter } from \"../router/router-state\";\nimport { VNode } from \"../vnode/vnode\";\nimport { OnDataChange, RouterState, DomStatus } from './../models';\nimport {ReactiveData, ReactiveComputed} from \"../observer/observer\"\nimport {EvalExp} from \"../eval\"\nimport { Watcher } from \"../observer/watcher\";\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router():RouterState{\n        return {\n            active:GetActiveRouter(),\n            cur:null\n        }\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean){\n        new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnRemoved()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Rerender()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\n\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let doms=this.SurroundMvvm.$Render()\n        this.DomSet=[doms]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Rerender() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnRemoved(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n}","import { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            reactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nfunction reactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                reactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    reactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                value=func.call(mvvm)\n                new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[])\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    let old:RouterInfo=new _RouterInfo(path,params)\n    \n    active.path=path\n    active.params=params\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,old)\n    })\n}\nexport function GetActiveRouter(){\n    return active\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { Prop } from \"../models\";\nimport { DirectiveNode } from \"../vnode/directive-node\";\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM {\n    \n\n    $Name:string\n    $element:HTMLElement\n\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n\n    constructor(private $directive:DirectiveNode,private $vnode:VinallaNode){\n    }\n    \n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$InitFuncs.forEach(init=>{\n            (this as any)[init].call(this)\n        })\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name)\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.name]=inName.value\n                }else{\n                    let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value)\n                    this.$checkProp(prop,newvalue);\n                    (this as any)[prop.name]=newvalue\n\n                    this.$vnode.mvvm.$CreateWatcher(this.$vnode,inName.value,(newvalue:any,oldvalue:any)=>{\n                        this.$checkProp(prop,newvalue);\n                        (this as any)[prop.name]=newvalue\n                    });\n                }\n            }\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n}","import { NotifyUrlChange } from '../router/router-manager';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nimport { DomStatus } from '../models';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name)\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.name]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.name,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\nimport { RegisterDirective } from \"../manager/directive-manager\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DirectiveNode } from \"../vnode/directive-node\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $DestroyFuncs=res.destroyFuncs\n            constructor(directive:DirectiveNode,vnode:VNode){\n                super(directive,vnode)\n            }\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { CustomNode } from \"./custom-node\";\nimport { InitComponent } from \"../manager/components-manager\";\nimport { GetNS } from '../util';\nimport { VDom } from '../vdom/vdom';\nimport { NextRouter, MoveBack } from \"../router/router-manager\";\nimport { DomStatus } from '../models';\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    \n    private instance(componentStr:string):VNode{\n\n        let ns=GetNS(componentStr)\n        if(ns.namespace==null)\n            ns.namespace=\"default\"\n        let construct=InitComponent(ns.value,ns.namespace)\n        \n        if(construct==null){\n            throw new Error(`router can not find component name:${ns.value},namespace:${ns.namespace}`)\n        }\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n\n    OnRemoved(){\n        if(this.Children.length>0)\n            this.Children[0].OnRemoved()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\nimport { DirectiveNode } from './vnode/directive-node';\nimport { VNode } from './vnode/vnode';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new (directive:DirectiveNode,vnode:VNode):DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\nexport interface RouterState{\n    active:RouterInfo,\n    cur:RouterInfo\n}\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>vnode.SetStatus(VNodeStatus.DEPRECATED))\n            moved.forEach(item=>{\n                item.OnRemoved()\n            })\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnRemoved(){\n        this.Children.forEach(vnode=>vnode.OnRemoved())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnRemoved(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnRemoved()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport { LogError } from '../util';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let hacked=\"var a=\"+exp+\";a\";\n        let classes:any;\n        try {\n            classes=eval(hacked);\n        } catch (error) {\n            LogError(\"json format error:\"+exp)\n            return;\n        }\n        for(let key in classes){\n            let istrue=vnode.mvvm.$GetExpOrFunValue(key);\n            if(istrue){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(classes[key]);\n            }\n            vnode.mvvm.$CreateWatcher(vnode,key,(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(classes[key]);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(classes[key]);\n                }\n            })\n        }\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport { LogError } from '../util';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let hacked=\"var a=\"+exp+\";a\";\n        let styleexp:any;\n        try {\n            styleexp=eval(hacked);\n        } catch (error) {\n            LogError(\"json format error:\"+exp)\n            return;\n        }\n        \n        for(let key in styleexp){\n            let istrue=vnode.mvvm.$GetExpOrFunValue(key);\n            let styles=styleexp[key];\n            if(istrue){\n                for(let stylename in styles){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[stylename]=styles[stylename];\n                }\n            }\n            vnode.mvvm.$CreateWatcher(vnode,key,(newvalue)=>{\n                if(newvalue){\n                    for(let stylename in styles){\n                        ((vnode.DomSet[0].dom as HTMLElement).style as any)[stylename]=styles[stylename];\n                    }\n                }else{\n                    for(let stylename in styles){\n                        ((vnode.DomSet[0].dom as HTMLElement).style as any)[stylename]=\"\";\n                    }\n                }\n            })\n        }\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let newvalue=vnode.mvvm.$GetExpOrFunValue(strEval.exp);\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue;\n            vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            })\n        }\n    }else{\n        let newvalue=vnode.mvvm.$GetExpOrFunValue(exp);\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue;\n        vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        })\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false)\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let newvalue=vnode.mvvm.$GetExpOrFunValue(exp);\n    setValue(vnode, newvalue)\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = vnode.mvvm.$GetExpOrFunValue(exp)\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\"\n    if(vnode.DomSet[0].dom.nodeName.toLowerCase()==\"a\"){\n        if(isconst){\n            let streval=StrToEvalstr(exp)\n            if(streval.isconst){\n                href=streval.exp;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n            }\n            else{\n                let newvalue=vnode.mvvm.$GetExpOrFunValue(streval.exp);\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n                vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                    href=newvalue;\n                    (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n                })                \n            }\n        }else{\n            let newvalue=vnode.mvvm.$GetExpOrFunValue(exp);\n            href=newvalue;\n            vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n        }\n        \n    }\n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.NavigateTo(href)\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons(dirNode,this)\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n                return\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value})\n            }\n        })\n    }\n\n    OnRemoved(){\n        super.OnRemoved()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                dom.setAttribute(prop.name, prop.value)\n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n                this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                })\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Rerender() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Rerender())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n}","import { IComponentMvvm, Event } from './../models';\nimport { RegisterComponent, GetDomTree } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { FetchProperty } from './property';\nimport { VNode } from '../vnode/vnode';\nimport { NewVNode } from '../vdom/vdom';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        RegisterComponent(option.name,option.namespace,constructor,option)\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Data,Computed,Prop,OnInit,OnDestroy} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}