{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.ts","webpack:///./src/util.ts","webpack:///./src/vnode/vnode.ts","webpack:///./src/vdom/vdom.ts","webpack:///./src/decorator/property.ts","webpack:///./src/manager/components-manager.ts","webpack:///./src/router/router-manager.ts","webpack:///./src/observer/watcher.ts","webpack:///./src/mvvm/mvvm.ts","webpack:///./src/eval.js","webpack:///./src/manager/start.ts","webpack:///./src/vnode/custom-node.ts","webpack:///./src/router/router-state.ts","webpack:///./src/observer/observer.ts","webpack:///./src/observer/notice-center.ts","webpack:///./src/manager/directive-manager.ts","webpack:///./src/manager/app-manager.ts","webpack:///./src/mvvm/directive-mvvm.ts","webpack:///./src/mvvm/app-mvvm.ts","webpack:///./src/mvvm/component-mvvm.ts","webpack:///./src/decorator/directive.ts","webpack:///./src/decorator/app.ts","webpack:///./src/vnode/plug-node.ts","webpack:///./src/vnode/router-node.ts","webpack:///./src/vnode/template-node.ts","webpack:///./src/vnode/if-node.ts","webpack:///./src/observer/msg-queue.ts","webpack:///./src/observer/watcher-collect.ts","webpack:///./src/models.ts","webpack:///./src/vnode/for-node.ts","webpack:///./src/vnode/slot-node.ts","webpack:///./src/vnode/directive-node.ts","webpack:///./src/directive/class.ts","webpack:///./src/directive/style.ts","webpack:///./src/directive/html.ts","webpack:///./src/directive/onclick.ts","webpack:///./src/directive/model.ts","webpack:///./src/directive/href.ts","webpack:///./src/directive/inner-dir.ts","webpack:///./src/vnode/vinalla-node.ts","webpack:///./src/decorator/component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","NavigateTo","$IsRoot","$NavigateTo","$GetFenceNode","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","root","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","repository","Id","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","factory","templateUrl","template","DOMParser","parseFromString","body","children","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrls","params","j","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","matchUrl","clearMark","router","marked","routers","getLeaf","redirect","window","history","replaceState","SetActiveRouter","parent_1","unshift","RegisterRouter","checkRouter","component","components","urls","map","copyRouter","fullurl","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","active","GetActiveRouter","cur","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","GetAnchorNode","$AddFragment","html","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","context","attachObj","newcontext","assign","$attachObj","eval","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","const_2","plug_node_1","vnode_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","styleJson","this_1","newvalue","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","_RouterInfo","path","getParam","listeners","old","listen","DEPRECATED","WatchRouterChange","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","_a","pop","splice","shift","func","firstget","watcher","notices","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","$checkProp","$element","router_manager_1","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","instance","componentStr","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","classJson","classList","add","remove","Style","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"anchor\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string){\n    if(char.length>1)\n        throw new Error(\"only receve one character\")\n    let start=-1\n    while(str[start+1]==char){\n        start++\n    }\n    let end=str.length\n    while(str[end-1]==char){\n        end--\n    }\n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { VinallaNode } from './vinalla-node';\nimport { DomStatus } from './../models';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { AppMvvm } from './../mvvm/app-mvvm';\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    NavigateTo(url:string):void{\n        if(this.mvvm.$IsRoot()){\n            (this.mvvm as AppMvvm).$NavigateTo(url)\n        }else{\n            if(this.Parent!=null)\n                this.Parent.NavigateTo(url);\n            else{\n                (<ComponentMvvm>this.mvvm).$GetFenceNode().NavigateTo(url);\n            }\n        }\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=-1\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    routers.forEach(router=>{\n        router.urls=router.urls.map(url=>{\n            if(url.indexOf(\"/\")!=0)\n                return \"/\"+url\n            else\n                return url\n        })\n    })\n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        if(router.redirect!=null){\n            router.component=\"\"\n            router.url=\"\"\n        }\n        if(router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.url==null && router.urls==null){\n            throw new Error(\"must specify url or urls in router\")\n        }\n        router.params=router.params?router.params:[]\n        router.urls=router.urls?router.urls:[]\n        if(router.url!=null)\n            router.urls.push(router.url)\n        checkRouter(router.children)\n    })\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        urls:router.urls,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrls:[],\n        params:router.params,\n        redirect:router.redirect,\n        marked:false\n    }\n    if(parent!=null){\n        r.urls.forEach(url=>{\n            parent.fullUrls.forEach(fullurl=>{\n                if(url.indexOf(\"/\")==0){\n                    r.fullUrls.push(url)\n                }else{\n                    if(url==\"\")\n                        r.fullUrls.push(fullurl)\n                    else\n                        r.fullUrls.push(fullurl+\"/\"+url)\n                }\n            })\n        })\n    }else{\n        r.urls.forEach(url=>r.fullUrls.push(url))\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\nfunction matchRouter(matchedRouter:InnerRouter):{name:string,value:string}[]{\n    let vinallaUrl=location.pathname\n    while(vinallaUrl.endsWith(\"/\")){\n        vinallaUrl=vinallaUrl.substr(0,vinallaUrl.length-1)\n    }\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    for(let i=0;i<matchedRouter.fullUrls.length;i++){\n        let matchedUrl=matchedRouter.fullUrls[i];\n        let matchedSlice=matchedUrl.split(\"/\");\n        if(vinallaSlice.length!=matchedSlice.length)\n            continue;\n        let params:{name:string,value:string}[]=[];\n        for(var j=0;j<matchedSlice.length;j++){\n            if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n                if(vinallaSlice[j]!=\"\"){\n                    let name=RegExp.$1\n                    params.push({name:name,value:vinallaSlice[j]})\n                    continue;\n                }else{\n                    break\n                }\n            }\n            if(matchedSlice[j]==vinallaSlice[j]){\n                continue;\n            }\n            break;\n        }\n        if(j==matchedSlice.length){\n            let requireParams=matchedRouter.params;\n            let searchParams=getSearchParams();\n            params=params.concat(searchParams);\n            requireParams.forEach(rp=>{\n                let exist=params.find(p=>p.name==rp.name);\n                if(exist==null && rp.required){\n                    throw new Error(\"router match failed,no matched params:\"+rp.name);\n                }\n            })\n            return params;\n        }\n    }\n    return null;\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\nfunction getLeaf(router:InnerRouter):InnerRouter[]{\n    if(router.marked)\n        return []\n    if(router.children.length==0){\n        router.marked=true\n        return [router];\n    }\n    \n    let res:InnerRouter[]=[]\n    router.children.forEach(child=>{\n        res=res.concat(getLeaf(child))\n    })\n    if(res.length==0){\n        router.marked=true\n        return [router];\n    }\n    return res\n}\nfunction clearMark(router:InnerRouter){\n    router.children.forEach(child=>{\n        clearMark(child)\n    })\n    router.marked=false\n}\nfunction matchUrl(){\n    appRouters.forEach(r=>clearMark(r))\n\n    let routers:InnerRouter[]=[]\n\n    while(true){\n        let res:InnerRouter[]=[]\n        appRouters.forEach(r=>{\n            res=res.concat(getLeaf(r))\n        })\n        if(res.length==0){\n            break\n        }else{\n            routers=routers.concat(res)\n        }\n    }\n\n    let redirect=false\n    for(let i=0;i<routers.length;i++){\n        let router=routers[i]\n        if(router.redirect!=null){\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let params=matchRouter(router)\n        if(params!=null){\n            SetActiveRouter(location.pathname,params)\n            matchedRouter=[router]\n            let parent=router.parent\n            while(parent!=null){\n                matchedRouter.unshift(parent)\n                parent=parent.parent\n            }\n            break\n        }\n    }\n    if(redirect){\n        matchUrl()\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):string{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==-1){\n        matchUrl()\n        firstVNode=vnode\n        cursor=0\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\nexport interface Router extends _Router{\n    url?: string\n}\nexport interface _Router{\n    urls?:string[]\n    component?: string\n    components?:{[name:string]:string}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends _Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrls:string[],\n    marked:boolean\n}\n\nexport function NotifyUrlChange(){\n    matchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterState } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router():RouterState{\n        return {\n            active:GetActiveRouter(),\n            cur:null\n        }\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    GetAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.GetAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\n\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { PRE } from './../const';\nimport { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\nimport { ParseStyle } from '../util';\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render()\n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n                \n        }\n        if(this.styles[PRE+'style']!=null){\n            let exp=this.styles[PRE+'style'];\n            let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n            if(!reg.test(exp)){\n                throw new Error(\"exp format error:\"+exp);\n            }\n            let styleJson=ParseStyle(exp);\n            for(let key in styleJson){\n                let watcher=this.mvvm.$CreateWatcher(this,styleJson[key],(newvalue)=>{\n                    if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                        ((dom.dom as HTMLElement).style as any)[key]=newvalue;\n                    }else{\n                        ((dom.dom as HTMLElement).style as any)[key]=\"\";\n                    }\n                });\n                let value=watcher.GetCurValue();\n                if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                    ((dom.dom as HTMLElement).style as any)[key]=value;\n                }\n            }\n        }\n        this.DomSet=[dom]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[])\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    let old:RouterInfo=new _RouterInfo(path,params)\n    \n    active.path=path\n    active.params=params\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,old)\n    })\n}\nexport function GetActiveRouter(){\n    return active\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { NotifyUrlChange } from '../router/router-manager';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nimport { DomStatus } from '../models';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomType, VNodeStatus } from './../const';\nimport { VNode } from \"./vnode\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { CustomNode } from \"./custom-node\";\nimport { InitComponent } from \"../manager/components-manager\";\nimport { GetNS } from '../util';\nimport { VDom } from '../vdom/vdom';\nimport { NextRouter, MoveBack } from \"../router/router-manager\";\nimport { DomStatus } from '../models';\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let router=NextRouter(this);\n        //释放旧的资源\n        this.Children.forEach(child=>{\n            child.SetStatus(VNodeStatus.DEPRECATED);\n            child.OnDestroy();\n        });\n        \n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    private instance(componentStr:string):VNode{\n\n        let ns=GetNS(componentStr)\n        if(ns.namespace==null)\n            ns.namespace=\"default\"\n        let construct=InitComponent(ns.value,ns.namespace)\n        \n        if(construct==null){\n            throw new Error(`router can not find component name:${ns.value},namespace:${ns.namespace}`)\n        }\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\nexport interface RouterState{\n    active:RouterInfo,\n    cur:RouterInfo\n}\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n\n        let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let classJson=ParseStyle(exp);\n        for(let key in classJson){            \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(value){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let styleJson=ParseStyle(exp);\n        for(let key in styleJson){\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n                if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n                }else{\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n            }\n        }\n    }\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            });\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { Watcher } from './../observer/watcher';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\"\n    if(vnode.DomSet[0].dom.nodeName.toLowerCase()==\"a\"){\n        if(isconst){\n            let streval=StrToEvalstr(exp)\n            if(streval.isconst){\n                href=streval.exp;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n            }\n            else{                \n                let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                    href=newvalue;\n                    (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n                });\n                href=watcher.GetCurValue();\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",href);\n            }\n        }else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n            href=watcher.GetCurValue();\n        }\n        \n    }\n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.NavigateTo(href)\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { IComponentMvvm, Event, DomStatus } from './../models';\nimport { RegisterComponent, GetDomTree } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { FetchProperty } from './property';\nimport { VNode } from '../vnode/vnode';\nimport { NewVNode } from '../vdom/vdom';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        RegisterComponent(option.name,option.namespace,constructor,option)\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}