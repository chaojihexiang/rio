{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.ts","webpack:///./src/util.ts","webpack:///./src/vnode/vnode.ts","webpack:///./src/vdom/vdom.ts","webpack:///./src/decorator/property.ts","webpack:///./src/router/router-manager.ts","webpack:///./src/observer/watcher.ts","webpack:///./src/mvvm/mvvm.ts","webpack:///./src/eval.js","webpack:///./src/manager/components-manager.ts","webpack:///./src/manager/start.ts","webpack:///./src/vnode/custom-node.ts","webpack:///./src/router/router-state.ts","webpack:///./src/observer/observer.ts","webpack:///./src/observer/notice-center.ts","webpack:///./src/manager/directive-manager.ts","webpack:///./src/manager/app-manager.ts","webpack:///./src/mvvm/directive-mvvm.ts","webpack:///./src/mvvm/app-mvvm.ts","webpack:///./src/mvvm/component-mvvm.ts","webpack:///./src/decorator/directive.ts","webpack:///./src/decorator/app.ts","webpack:///./src/vnode/plug-node.ts","webpack:///./src/vnode/router-node.ts","webpack:///./src/vnode/template-node.ts","webpack:///./src/vnode/if-node.ts","webpack:///./src/observer/msg-queue.ts","webpack:///./src/observer/watcher-collect.ts","webpack:///./src/models.ts","webpack:///./src/vnode/for-node.ts","webpack:///./src/vnode/slot-node.ts","webpack:///./src/vnode/directive-node.ts","webpack:///./src/directive/class.ts","webpack:///./src/directive/style.ts","webpack:///./src/directive/html.ts","webpack:///./src/directive/onclick.ts","webpack:///./src/directive/model.ts","webpack:///./src/directive/href.ts","webpack:///./src/directive/inner-dir.ts","webpack:///./src/vnode/vinalla-node.ts","webpack:///./src/decorator/component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","root","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrls","params","j","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","matchUrl","routers","flatRouter","children","redirect","router","SetActiveRouter","window","history","replaceState","parent_1","unshift","RegisterRouter","checkRouter","component","components","urls","map","copyRouter","fullurl","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","router_manager_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","GetActiveRouter","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$IsRoot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","GetAnchorNode","$AddFragment","html","DOMParser","parseFromString","body","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","$onRouterChange","callbck","WatchRouterChange","$NavigateTo","context","attachObj","newcontext","assign","$attachObj","eval","repository","id","Id","ComponentAutoId","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","factory","templateUrl","template","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","parentElement","replaceChild","app","const_2","plug_node_1","vnode_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","styleJson","this_1","newvalue","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","_RouterInfo","path","getParam","active","previous","listeners","listen","DEPRECATED","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","_a","pop","splice","shift","func","firstget","watcher","notices","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","$checkProp","$element","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","$GetFenceNode","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","instance","construct","custnode","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","forSplit","newCopyNode","itemexp","itemexpValue","that","class_1","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","items","num","bind","DirectiveNode","addProperty","Classes","classJson","classList","add","remove","Style","Html","noBracket","strEval","OnClick","methodStr_1","paramsStr","ps_1","addEventListener","Number","valueOf","isNaN","setValue","inputType","getAttribute","checked","DirModel","inputtype","input","cur","oldarray","Href","href","streval","setAttribute","href_1","model_1","onclick_1","html_1","style_1","innerDirs","RegisterInnerDir","comiple","GetInnerDir","inner_dir_1","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","dirNode","dirMvvm_1","isprop","isevent","dir_1","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","$template","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"anchor\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string){\n    if(char.length>1)\n        throw new Error(\"only receve one character\")\n    let start=-1\n    while(str[start+1]==char){\n        start++\n    }\n    let end=str.length\n    while(str[end-1]==char){\n        end--\n    }\n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { DomStatus } from './../models';\nimport { VinallaNode } from './vinalla-node';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent)\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=-1\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    routers.forEach(router=>{\n        router.urls=router.urls.map(url=>{\n            if(url.indexOf(\"/\")!=0)\n                return \"/\"+url\n            else\n                return url\n        })\n    })\n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        \n        if(router.redirect==null && router.component==null && router.components==null){\n            throw new Error(\"must specify component or components in router\")\n        }\n        if(router.redirect==null && router.url==null && router.urls==null){\n            throw new Error(\"must specify url or urls in router\")\n        }\n        router.params=router.params?router.params:[]\n        router.urls=router.urls?router.urls:[]\n        if(router.url!=null)\n            router.urls.push(router.url)\n        checkRouter(router.children)\n    })\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        urls:router.urls,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrls:[],\n        params:router.params,\n        redirect:router.redirect\n    }\n    if(parent!=null){\n        r.urls.forEach(url=>{\n            parent.fullUrls.forEach(fullurl=>{\n                r.fullUrls.push(fullurl+url)\n            })\n        })\n    }else{\n        r.urls.forEach(url=>r.fullUrls.push(url))\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\nfunction matchRouter(matchedRouter:InnerRouter):{name:string,value:string}[]{\n    let vinallaUrl=location.pathname\n    while(vinallaUrl.endsWith(\"/\")){\n        vinallaUrl=vinallaUrl.substr(0,vinallaUrl.length-1)\n    }\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    for(let i=0;i<matchedRouter.fullUrls.length;i++){\n        let matchedUrl=matchedRouter.fullUrls[i];\n        let matchedSlice=matchedUrl.split(\"/\");\n        if(vinallaSlice.length!=matchedSlice.length)\n            continue;\n        let params:{name:string,value:string}[]=[];\n        for(var j=0;j<matchedSlice.length;j++){\n            if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n                if(vinallaSlice[j]!=\"\"){\n                    let name=RegExp.$1\n                    params.push({name:name,value:vinallaSlice[j]})\n                    continue;\n                }else{\n                    break\n                }\n            }\n            if(matchedSlice[j]==vinallaSlice[j]){\n                continue;\n            }\n            break;\n        }\n        if(j==matchedSlice.length){\n            let requireParams=matchedRouter.params;\n            let searchParams=getSearchParams();\n            params=params.concat(searchParams);\n            requireParams.forEach(rp=>{\n                let exist=params.find(p=>p.name==rp.name);\n                if(exist==null && rp.required){\n                    throw new Error(\"router match failed,no matched params:\"+rp.name);\n                }\n            })\n            return params;\n        }\n    }\n    return null;\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\n\n\nfunction flatRouter(r:InnerRouter):InnerRouter[]{\n    let routers:InnerRouter[]=[r];\n    r.children.forEach(child=>{\n        routers=routers.concat(flatRouter(child));\n    });\n    return routers;\n}\nfunction matchUrl(){\n    matchedRouter=[];\n\n    let routers:InnerRouter[]=[]\n\n    appRouters.forEach(r=>{\n        routers=routers.concat(flatRouter(r))\n    });\n\n    let redirect=false\n    for(let i=0;i<routers.length;i++){\n        let router=routers[i]\n        if(router.redirect!=null){\n            SetActiveRouter(location.pathname,[]);\n            window.history.replaceState(null,\"\",router.redirect)\n            redirect=true\n            break\n        }\n        let params=matchRouter(router)\n        if(params!=null){\n            SetActiveRouter(location.pathname,params)\n            matchedRouter=[router]\n            let parent=router.parent\n            while(parent!=null){\n                matchedRouter.unshift(parent)\n                parent=parent.parent\n            }\n            break\n        }\n    }\n    if(redirect){\n        matchUrl()\n    }\n}\nexport function NextRouter(vnode:VNode,name?:string):IComponentMvvm{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==-1){\n        matchUrl()\n        firstVNode=vnode\n        cursor=0\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\nexport interface Router extends _Router{\n    url?: string\n}\nexport interface _Router{\n    urls?:string[]\n    component?: IComponentMvvm\n    components?:{[name:string]:IComponentMvvm}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends _Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrls:string[]\n}\n\nexport function NotifyUrlChange(){\n    matchUrl()\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter, WatchRouterChange } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterInfo } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { NotifyUrlChange } from '../router/router-manager';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router(){\n        return GetActiveRouter()\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    GetAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.GetAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    protected $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    protected $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**监视路由变化 */\n    protected $onRouterChange(callbck:(newrouter:RouterInfo,oldrouter:RouterInfo)=>void){\n        WatchRouterChange(this.$treeRoot,callbck);\n    }\n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nlet id=0;\nexport function ComponentAutoId(){\n    return \"\"+id++;\n}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\n\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { PRE } from './../const';\nimport { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\nimport { ParseStyle } from '../util';\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render()\n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n                \n        }\n        if(this.styles[PRE+'style']!=null){\n            let exp=this.styles[PRE+'style'];\n            let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n            if(!reg.test(exp)){\n                throw new Error(\"exp format error:\"+exp);\n            }\n            let styleJson=ParseStyle(exp);\n            for(let key in styleJson){\n                let watcher=this.mvvm.$CreateWatcher(this,styleJson[key],(newvalue)=>{\n                    if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                        ((dom.dom as HTMLElement).style as any)[key]=newvalue;\n                    }else{\n                        ((dom.dom as HTMLElement).style as any)[key]=\"\";\n                    }\n                });\n                let value=watcher.GetCurValue();\n                if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                    ((dom.dom as HTMLElement).style as any)[key]=value;\n                }\n            }\n        }\n        this.DomSet=[dom]\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[]);\nlet previous:RouterInfo=null;\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    previous=active;\n    active=new _RouterInfo(path,params)\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,previous)\n    })\n}\nexport function GetActiveRouter(){\n    return {active:active,previous:previous}\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { DomStatus } from '../models';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    \n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { MoveBack, NextRouter } from \"../router/router-manager\";\nimport { VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { IComponentMvvm } from './../models';\nimport { CustomNode } from \"./custom-node\";\nimport { VNode } from \"./vnode\";\n\nexport class RouterNode extends VNode{\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this)\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let constructor=NextRouter(this);\n        //释放旧的资源\n        this.Children.forEach(child=>{\n            child.SetStatus(VNodeStatus.DEPRECATED);\n            child.OnDestroy();\n        });\n\n        if(constructor!=null){\n            let vnode=this.instance(constructor)\n            this.Children=[vnode]\n            this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n            this.DomSet= this.DomSet.concat(vnode.Render())\n            this.Parent.Reflow();\n            MoveBack()\n        }else{\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            })\n        }\n    }\n    private instance(construct:IComponentMvvm):VNode{\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\n\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\n\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    public ForExp:ForExp\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let forSplit=this.originForExp.trim().split(/\\s+/)\n        this.ForExp=new ForExp(forSplit[0],forSplit[2]) \n    }\n    private newCopyNode(n:number){\n        let itemexp=this.ForExp.itemExp;\n        let itemexpValue=this.ForExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                Object.defineProperty(mvvm,\"$index\",{\n                    value:n,\n                    configurable:true,\n                    enumerable:true\n                })\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.ForExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.ForExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Classes(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n\n        let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let classJson=ParseStyle(exp);\n        for(let key in classJson){            \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n                if(newvalue){\n                    (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n                }else{\n                    (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(value){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport function Style(exp:string,vnode:VinallaNode,isconst:boolean){\n    if(isconst){\n        let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n        if(!reg.test(exp)){\n            throw new Error(\"exp format error:\"+exp);\n        }\n        let styleJson=ParseStyle(exp);\n        for(let key in styleJson){\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n                if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n                }else{\n                    ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n                }\n            });\n            let value=watcher.GetCurValue();\n            if(toString.call(value)==\"[object String]\" && value!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n            }\n        }\n    }\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { StrToEvalstr } from \"../util\";\n\nexport function Html(exp:string,vnode:VinallaNode,noBracket:boolean){\n    if(noBracket){\n        let strEval=StrToEvalstr(exp);\n        if(strEval.isconst)\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n        else{\n            let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n                (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n            });\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { VinallaNode } from './../vnode/vinalla-node';\nimport {REG_EVENT, REG_STR} from \"../const\"\nexport function OnClick(exp:string,vnode:VinallaNode,isconst:boolean){\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(\"click\", (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(\"click\", () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { Watcher } from './../observer/watcher';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { VNode } from \"../vnode/vnode\"\nexport function DirModel(exp: string, vnode: VinallaNode,isconst:boolean) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VinallaNode } from './../vnode/vinalla-node';\n\nexport function Href(exp:string,vnode:VinallaNode,isconst:boolean){\n    let href:string=\"\";\n    if(isconst){\n        let streval=StrToEvalstr(exp)\n        if(streval.isconst){\n            href=streval.exp;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",streval.exp);\n        }\n        else{                \n            let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n                href=newvalue;\n                (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n            });\n            href=watcher.GetCurValue();\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",href);\n        }\n    }else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,exp,newvalue=>{\n            href=newvalue;\n            (vnode.DomSet[0].dom as HTMLElement).setAttribute(PRE+\"href\",newvalue);\n        });\n        href=watcher.GetCurValue();\n    }\n        \n    vnode.DomSet[0].dom.addEventListener(\"click\",()=>{\n        vnode.mvvm.$NavigateTo(href);\n    })\n}\n","import { VinallaNode } from './../vnode/vinalla-node';\nimport { Href } from './href';\nimport { PRE } from '../const';\nimport { DirModel } from './model';\nimport { OnClick } from './onclick';\nimport {Html} from \"./html\"\nimport {Style} from \"./style\"\nimport {Classes} from \"./class\"\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VinallaNode,isconst:boolean,):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"click\",OnClick)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,isconst:boolean,exp:string}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            if(REG_IN.test(attr.Name)){\n                let dir=GetInnerDir(RegExp.$1)\n                if(dir!=null){\n                    this.innerDirective.push({dir:dir,isconst:false,exp:attr.Value})\n                    return false\n                }\n            }\n            let dir=GetInnerDir(attr.Name)\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,isconst:true,exp:attr.Value})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.isconst)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { GetDomTree, RegisterComponent, InitComponent, ComponentAutoId } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { NewVNode } from '../vdom/vdom';\nimport { VNode } from '../vnode/vnode';\nimport { DomStatus, Event, IComponentMvvm } from './../models';\nimport { FetchProperty } from './property';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            $template=option.template\n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                //以防页面组件未初始化\n                InitComponent(this.$InitName(),this.$InitNamespace());\n\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        if(option.name==null)\n            option.name=constructor.name+ComponentAutoId();\n        RegisterComponent(option.name,option.namespace,constructor,option);\n        return (constructor as any);\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}