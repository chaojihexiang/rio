{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.ts","webpack:///./src/util.ts","webpack:///./src/vnode/vnode.ts","webpack:///./src/vdom/vdom.ts","webpack:///./src/decorator/property.ts","webpack:///./src/router/router-manager.ts","webpack:///./src/observer/watcher.ts","webpack:///./src/mvvm/mvvm.ts","webpack:///./src/eval.js","webpack:///./src/manager/components-manager.ts","webpack:///./src/manager/start.ts","webpack:///./src/vnode/custom-node.ts","webpack:///./src/observer/observer.ts","webpack:///./src/observer/notice-center.ts","webpack:///./src/manager/directive-manager.ts","webpack:///./src/directive/inner-dir.ts","webpack:///./src/router/router-state.ts","webpack:///./src/manager/app-manager.ts","webpack:///./src/mvvm/directive-mvvm.ts","webpack:///./src/mvvm/app-mvvm.ts","webpack:///./src/mvvm/component-mvvm.ts","webpack:///./src/decorator/directive.ts","webpack:///./src/decorator/app.ts","webpack:///./src/vnode/plug-node.ts","webpack:///./src/vnode/router-node.ts","webpack:///./src/vnode/template-node.ts","webpack:///./src/vnode/if-node.ts","webpack:///./src/observer/msg-queue.ts","webpack:///./src/observer/watcher-collect.ts","webpack:///./src/models.ts","webpack:///./src/vnode/for-node.ts","webpack:///./src/vnode/slot-node.ts","webpack:///./src/vnode/directive-node.ts","webpack:///./src/directive/style.ts","webpack:///./src/directive/model.ts","webpack:///./src/directive/html.ts","webpack:///./src/directive/href.ts","webpack:///./src/directive/event.ts","webpack:///./src/directive/class.ts","webpack:///./src/vnode/vinalla-node.ts","webpack:///./src/decorator/component.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DIR_MODEL","DIR_EVENT_CLICK","ANCHOR","PRE","REG_SINGLE","REG_MULTI","REG_EVENT","REG_STR","REG_MID_STR","REG_IN","REG_OUT","REG_ATTR","REG_TEST_OUTPUT","VNodeStatus","DomType","const_1","LogError","msg","console","error","LogInfo","log","GetNS","str","res","split","length","namespace","slice","join","HttpGet","url","xhr","XMLHttpRequest","open","send","readyState","status","responseText","IsStringEmpty","trim","Trim","char","direction","Error","start","end","substring","StrToEvalstr","test","isconst","exp","RegExp","$1","reg","exec","lastindex","index","substr","endsWith","InsertDomChild","parent","child","after","firstChild","insertBefore","appendChild","nextSibling","TypeOf","param","toString","ParseStyle","style","json","forEach","indexOf","key","$2","vdom_1","VNode","Vdom","mvvm","Parent","this","Children","DomSet","ACTIVE","nodeValue","NodeValue","nodeName","NodeName","nodeType","NodeType","Reflow","_this","concat","Refresh","filter","dom","type","DELETE","OnDestroy","AttachChildren","childdom","vchild","NewVNode","push","SetStatus","GetStatus","OnRouterChange","GetNodeName","toLowerCase","GetAnchor","anchor","Priority","components_manager_1","util_1","vinalla_node_1","VDom","Attrs","GetAttr","Name","Value","AddAttr","attr","TraverseDom","root","replace","htmldom","attributes","childNodes","priority","FOR","SlotNode","ForNode","IF","IfNode","TemplateNode","RouterNode","ns","IsComponentRegistered","selfmvvm","InitComponent","cust","CustomNode","$SetFenceNode","$initialize","$AttachChildren","VinallaNode","datas","computes","props","initFuncs","mountFuncs","destroyFuncs","Reactive","target","Computed","descriptor","Prop","required","origin","OnInit","OnMount","FetchProperty","router_state_1","start_1","matchedRouter","appRouters","cursor","firstVNode","matchRouter","vinallaUrl","location","pathname","vinallaSlice","matchedSlice","fullUrl","params","j","matchtype","name_1","requireParams","searchParams","searchSlice","search","name_value","getSearchParams","rp","find","RegisterRouter","routers","checkRouter","router","children","redirect","copyRouter","component","components","matchcounter","StartMatchUrl","SetActiveRouter","window","history","replaceState","NextRouter","vnode","MoveBack","NotifyUrlChange","RefreshApp","observer_1","Watcher","ExpOrFunc","cb","watchingArrayItem","deepRecord","getValue","SetTarget","$GetExpOrFunValue","CleanTarget","GetCurValue","GetVNode","Update","newval","diff","notice_center_1","eval_1","watcher_1","router_manager_1","Mvvm","$data","$namespace","$dataItems","$computeItems","$isroot","GetActiveRouter","$InitDataItems","$InitComputeItems","$treeRoot","$InitTreeroot","$InitNamespace","item","set","ReactiveData","ReactiveComputed","expOrFunc","EvalExp","$ExtendMvvm","$SetValue","keys","hasTraget","$CreateWatcher","listener","$Watch","$OnDestroy","$SetRoot","isroot","$IsRoot","$GetDataItems","$GetComputedItems","$Refresh","$RevokeMethod","method","_i","arguments","apply","$AddReactiveData","ReactiveKey","getAnchorNode","GetRef","ref","$AddFragment","html","DOMParser","parseFromString","body","anchorNode","domtree","Render","$on","notice","RegisterNotice","$broadcast","RevokeNotice","$onRouterChange","callbck","WatchRouterChange","$NavigateTo","context","attachObj","newcontext","assign","$attachObj","eval","repository","id","Id","ComponentAutoId","count","RegisterComponent","constructor","option","factoryOption","$constructor","$id","$preProcess","$domtree","$origin","RegisterComponentDirect","factory","templateUrl","template","styleUrl","document","createElement","innerHTML","getElementsByTagName","addAttr","preProcess","GetDomTree","app_manager_1","apps","Start","GetApp","App","content","$Render","querySelector","$InitEl","rootdom","display","parentElement","replaceChild","app","inner_dir_1","const_2","plug_node_1","_super","SurroundMvvm","ins_pure","ins_exp","outs","styles","classes","ins","$InitIns","i_1","prop","$InitOuts","i_2","event_1","__extends","AddIns","GetTemplate","templatename","kv","GetInnerDir","styledir","classitem","_a","classList","add","classdir","templates","default","PlugNode","childnode","name_2","name_3","GetInValue","GetIn","const","GetOut","$Update","$SetStatus","$target","watcher_collect_1","data","collecter","WatcherCollecter","reactiveArray","AddTarget","Notify","array","Array","old","pop","splice","shift","func","firstget","watcher","notices","DEPRECATED","RegisterDirective","GetDirectiveCon","IsDirectiveRegistered","class_1","href_1","html_1","model_1","style_1","innerDirs","RegisterInnerDir","comiple","Href","DirModel","OnEvent","Html","Classes","Style","_RouterInfo","path","getParam","active","previous","listeners","listen","RegisterApp","DirectiveMVVM","$Ins","$Outs","$InitFuncs","$MountFuncs","$DestroyFuncs","$Initialize","directive","$directive","$vnode","destroy","inName","$Name","newvalue","$checkProp","$element","AppMvvm","$el","ComponentMvvm","$name","$ins","$outs","$InitName","$fenceNode","$Emit","event","e","out","paramsType","$OnRouterChange","$GetFenceNode","node","$GetIns","directive_manager_1","property_1","Directive","events","checkDirectiveOption","$DirectiveMvvm","$Namespace","$Out","checkAppOption","$AppMvvm","init","domstatus","el","vdom","doms","custom_node_1","routername","lastConstructor","instance","construct","custnode","vnode_1","ifExp","NORMAL","reImpletement","attached","queue","settimeout","RevokeWatcher","temp","q","AddWatcher","setTimeout","msg_queue_1","watches","GetKey","INACTIVE","ForExp","itemExp","arrayExp","models_1","mvvm_1","originForExp","items","forSplit","forExp","kvs","indexName","newCopyNode","itemexp","itemexpValue","that","$hirented","implementForExp","newcount","custnodes","moved","moveditem","some","moveddom","num","bind","DirectiveNode","addProperty","styleJson","setValue","inputType","getAttribute","checked","inputtype","input","addEventListener","cur","oldarray","strEval","setAttr","setAttribute","href","streval","preventDefault","options","methodStr_1","paramsStr","ps_1","Number","valueOf","isNaN","classJson","remove","directive_node_1","directives","innerDirective","isAnchor","anchorName","attrs","vanillaAttrs","this_1","dirNode","dirMvvm_1","isprop","isevent","dir","directiveBind","dom_1","evalexp","oldvalue","src","NEW","childdomset","childom","CONSTANT","dom_2","createTextNode","textContent","createComment","thedom_1","childdom_1","domstate","removeChild","children_1","Component","checkComponentOption","$ComponentMvvm","component_1","app_1","directive_1","component_mvvm_1","app_mvvm_1","directive_mvvm_1"],"mappings":"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","file":"rio.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","export const DIR_MODEL = \"model\"\nexport const DIR_EVENT_CLICK = \"click\"\nexport const ANCHOR=\"ref\"\nexport const PRE=\"r-\"\n\n/**花括号数据绑定表达式 */\nexport const REG_SINGLE = /^\\{\\{([^\\{\\}]*)\\}\\}$/\nexport const REG_MULTI = /\\{\\{(.*?)\\}\\}/\n/**事件监听响应函数 */\nexport const REG_EVENT=/^(\\w+)\\((.*)\\)$/\n/**字符串 */\nexport const REG_STR=/^(['\"])(.*?)\\1$/\nexport const REG_MID_STR=/(['\"])(.*?)\\1/\n\n/**输入属性 */\nexport const REG_IN=/^\\[(\\w+)\\]$/\n/**输出事件 */\nexport const REG_OUT=/^\\((\\w+)\\)$/\n/**正常属性 */\nexport const REG_ATTR=/^[A-z_][\\w\\-]*$/\n\n\n/**测试输出项 */\nexport const REG_TEST_OUTPUT=/^((click))$/\n\nexport enum VNodeStatus{\n    /**依然处于vnode树中 */\n    ACTIVE,\n    /**不在vnode树中但是有可能重新加回来 */\n    INACTIVE,\n    /**抛弃 */\n    DEPRECATED\n}\n\nexport enum DomType{\n    /*没有变化的*/\n    CONSTANT,\n    /**新增的 */\n    NEW,\n    /**删除的 */\n    DELETE\n}","import { REG_SINGLE, REG_MULTI ,REG_STR} from \"./const\";\nimport { ParamType } from \"./models\";\n\nexport function LogError(msg:any){\n    console.error(msg)\n}\nexport function LogInfo(msg:any){\n    console.log(msg)\n}\nexport function GetNS(str:string):{namespace:string,value:string}{\n    let res=str.split(\":\")\n    if(res.length==1)\n        return {namespace:null,value:res[0]}\n    return {namespace:res[0],value:res.slice(1).join(\":\")}\n}\nexport function HttpGet(url:string):string{\n    let xhr=new XMLHttpRequest()\n    xhr.open(\"GET\",url,false)\n    xhr.send()\n    if(xhr.readyState==4 && xhr.status==200)\n        return xhr.responseText\n    else\n        return null\n}\nexport function IsStringEmpty(str:string){\n    if(str==null)\n        return true\n    str=str.trim()\n    if(str==\"\")\n        return true\n    return false\n}\nexport function Trim(str:string,char:string,direction:\"both\"|\"left\"|\"right\"=\"both\"){\n    if(char.length>1)\n        throw new Error(\"only receve one character\");\n    let start=-1;\n    if(direction==\"both\" || direction==\"left\"){\n        while(str[start+1]==char){\n            start++\n        }\n    }\n    \n    let end=str.length;\n    if(direction==\"both\"||direction==\"right\"){\n        while(str[end-1]==char){\n            end--\n        }\n    }\n    \n    return str.substring(start+1,end)\n}\n\nexport function StrToEvalstr(str:string):{isconst:boolean,exp:string}{\n    if (REG_SINGLE.test(str)) {\n        return {isconst:false,exp:RegExp.$1}\n    }else{\n        if(REG_MULTI.test(str)){\n            let reg=/\\{\\{([^\\{\\}]*)\\}\\}/g\n            let res=reg.exec(str)\n            let exp=\"\"\n            let lastindex=0\n            while(res){\n                if(res.index!=lastindex){\n                    exp+=\"\\'\"+str.substring(lastindex,res.index)+\"\\'+\"\n                }\n                lastindex=res.index+res[0].length\n                exp+=\"(\"+RegExp.$1+\")+\"\n                res=reg.exec(str)\n            }\n            if(lastindex!=str.length){\n                exp+=\"'\"+str.substr(lastindex)+\"'\"\n            }\n            if(exp.endsWith(\"+\")){\n                exp=exp.substring(0,exp.length-1)\n            }\n\n            return {isconst:false,exp:exp}\n        }else{\n            return {isconst:true,exp:str}\n        }\n    }\n}\n\nexport function InsertDomChild(parent:Node,child:Node,after:Node){\n    if(after==null){\n        if(parent.firstChild!=null)\n            parent.insertBefore(child,parent.firstChild)\n        else\n            parent.appendChild(child)\n    }else{\n        if(after.nextSibling!=null)\n            parent.insertBefore(child,after.nextSibling)\n        else\n            parent.appendChild(child)\n    }\n}\n\nexport function TypeOf(param:any):ParamType{\n    if(toString.call(param)==\"[object Boolean]\"){\n        return \"boolean\"\n    }\n    if(toString.call(param)==\"[object Array]\"){\n        return \"array\"\n    }\n    if(toString.call(param)==\"[object Number]\"){\n        return \"number\"\n    }\n    if(toString.call(param)==\"[object Object]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object Null]\"){\n        return \"object\"\n    }\n    if(toString.call(param)==\"[object String]\"){\n        return \"string\"\n    }\n    if(toString.call(param)==\"[object Undefined]\"){\n        throw new Error(\"function TypeOf: undefined is not allowed\")\n    }\n}\n/**解析传入r-class或者r-style的值为json对象 */\nexport function ParseStyle(style:string){\n    style=style.substr(1);\n    style=style.substr(0,style.length-1);\n    let styles=style.split(\",\");\n    let json:{[key:string]:string}={};\n    styles.forEach(s=>{\n        let index=s.indexOf(\":\");\n        let key=s.substr(0,index);\n        if(REG_STR.test(key)){\n            key=RegExp.$2;\n        }\n        json[key]=s.substr(index+1);\n    })\n    return json;\n}","import { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { DomStatus } from './../models';\nimport { VinallaNode } from './vinalla-node';\nexport abstract class VNode {\n    //元素值 只有当nodeType为3时才有用，其他时候为null\n    protected nodeValue: string\n    //元素名称 都是小写字母\n    protected nodeName: string\n    //元素类型：1 元素 3 文本 8 注释\n    protected nodeType: number\n    \n    \n    Children: VNode[] = []\n    DomSet: {type:DomType,dom:Node}[]=[]\n\n    \n    protected status:VNodeStatus=VNodeStatus.ACTIVE\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode) {\n        if(this.Vdom!=null){\n            this.nodeValue = this.Vdom.NodeValue\n            this.nodeName = this.Vdom.NodeName\n            this.nodeType = this.Vdom.NodeType\n        }\n    }\n\n\n    abstract Render():DomStatus[];\n\n    Reflow(){\n        this.DomSet=[];\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.DomSet)\n        });\n        if(this.Parent!=null)\n            this.Parent.Reflow()\n    }\n    Refresh():void{\n        this.DomSet=this.DomSet.filter(dom=>dom.type!=DomType.DELETE)\n        this.Children.forEach(child=>child.Refresh())\n    }\n    \n\n    abstract Update():void;\n    \n    \n    OnDestroy(){\n        this.Children.forEach(child=>{\n            child.OnDestroy()\n        })\n    }\n    \n    AttachChildren() {\n        //解析子节点\n        for (let i = 0; i < this.Vdom.Children.length; i++) {\n            let childdom=this.Vdom.Children[i]\n            let vchild=NewVNode(childdom,this.mvvm,this)\n            \n            if(vchild!=null){\n                vchild.AttachChildren()\n                this.Children.push(vchild)\n            }\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(child=>{\n            child.SetStatus(status)\n        })\n    }\n    GetStatus(){\n        return this.status\n    }\n    OnRouterChange(){\n        this.Children.forEach(child=>child.OnRouterChange())\n    }\n    GetNodeName(){\n        return this.nodeName.toLowerCase()\n    }\n    GetAnchor(name:string):VinallaNode{\n        for(let i=0;i<this.Children.length;i++){\n            let anchor=this.Children[i].GetAnchor(name);\n            if(anchor!=null)\n                return anchor;\n        }\n        return null;\n    }\n}","import { VNode } from \"../vnode/vnode\";\nimport { IsComponentRegistered, InitComponent } from \"../manager/components-manager\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { GetNS } from \"../util\";\nimport { PRE } from \"../const\";\nimport { VinallaNode } from \"../vnode/vinalla-node\";\n\ndeclare let require:(module:string)=>any\nexport class VDom{\n    NodeValue: string\n    NodeName: string\n    NodeType: number\n    Attrs: { Name: string, Value: string }[] = []\n    Children: VDom[] = []\n    GetAttr(name:string){\n        for(let i=0;i<this.Attrs.length;i++){\n            if(this.Attrs[i].Name==name)\n                return this.Attrs[i].Value\n        }\n        return null\n    }\n    AddAttr(attr:string,value:string=\"\"){\n        this.Attrs.push({Name:attr,Value:value})\n    }\n}\nexport function TraverseDom(dom:Node):VDom{\n    if(dom.nodeType==3 && dom.nodeValue.trim()==\"\")\n        return\n    let root=new VDom()\n    root.NodeValue=dom.nodeValue\n    if(root.NodeValue!=null){\n        root.NodeValue=root.NodeValue.trim().replace(/\\s+/g,\" \")\n    }\n    root.NodeName=dom.nodeName.toLowerCase()\n    root.NodeType=dom.nodeType\n    if(dom.nodeType==1){\n        let htmldom=dom as HTMLElement\n        for(let i=0;i<htmldom.attributes.length;i++){\n            root.Attrs.push({Name:htmldom.attributes[i].name,Value:htmldom.attributes[i].value})\n        }\n        for(let i=0;i<htmldom.childNodes.length;i++){\n            let child=TraverseDom(htmldom.childNodes[i])\n            child && root.Children.push(child)\n        }\n    }\n    return root\n}\nexport enum Priority{\n    NORMAL,\n    IF,\n    FOR\n}\nexport function NewVNode(dom:VDom,mvvm:Mvvm,parent:VNode,priority:Priority=Priority.FOR):VNode{\n    if(dom.NodeName.toLowerCase()==\"slot\"){\n        let SlotNode=require(\"../vnode/slot-node\").SlotNode\n        let vnode=new SlotNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n\n    if(priority>=Priority.FOR && dom.GetAttr(PRE+\"for\")!=null){\n        let ForNode=require(\"../vnode/for-node\").ForNode\n        let vnode= new ForNode(dom,mvvm,parent,dom.GetAttr(PRE+\"for\"))\n        return vnode\n    }\n    if(priority>=Priority.IF && dom.GetAttr(PRE+\"if\")!=null){\n        let IfNode=require(\"../vnode/if-node\").IfNode\n        let vnode= new IfNode(dom,mvvm,parent,dom.GetAttr(PRE+\"if\"))              \n        return vnode\n    }\n    if(dom.NodeName==\"r-template\"){\n        let TemplateNode=require(\"../vnode/template-node\").TemplateNode\n        let vnode= new TemplateNode(dom,mvvm,parent)\n        return vnode\n    }\n    if(dom.NodeName==\"router-view\"){\n        let RouterNode=require(\"../vnode/router-node\").RouterNode\n        let vnode= new RouterNode(dom,mvvm,parent,dom.GetAttr(\"name\"))\n        return vnode\n    }\n    let ns=GetNS(dom.NodeName)\n    if(IsComponentRegistered(ns.value,ns.namespace||\"default\")){\n        let construct=InitComponent(ns.value,ns.namespace||\"default\")\n        let selfmvvm=new construct()\n\n        let CustomNode=require(\"../vnode/custom-node\").CustomNode\n        let cust= new CustomNode(dom,mvvm,parent,selfmvvm)\n        selfmvvm.$SetFenceNode(cust)\n\n        selfmvvm.$initialize()\n        selfmvvm.$AttachChildren()\n        \n        \n        return cust\n    }\n        \n    return new VinallaNode(dom,mvvm,parent)\n}","import { ParamType, Prop } from './../models';\nlet datas:string[]=[]\nlet computes:{name:string,get:()=>any}[]=[]\nlet props:Prop[]=[]\nlet initFuncs:string[]=[];\nlet mountFuncs:string[]=[];\nlet destroyFuncs:string[]=[]\n\n\n\nexport function Reactive(target:any,key:string){\n    datas.push(key)\n}\nexport function Computed(target:any,key:string,descriptor:PropertyDescriptor){\n    computes.push({name:key,get:(descriptor as any).get})\n}\nexport function Prop(name:string,required:boolean,type?:ParamType){\n    return function(target:any,key:string){\n        props.push({\n            name:name,\n            required:required,\n            type:type,\n            origin:key\n        })\n    }\n}\n\nexport function OnInit(target:any,key:string,descriptor:PropertyDescriptor){\n    initFuncs.push(key)\n}\nexport function OnMount(target:any,key:string,descriptor:PropertyDescriptor){\n    mountFuncs.push(key)\n}\nexport function OnDestroy(target:any,key:string,descriptor:PropertyDescriptor){\n    destroyFuncs.push(key)\n}\n\n\n\nexport function FetchProperty(){\n    let res={\n        computes:computes,\n        props:props,\n        initFuncs:initFuncs,\n        mountFuncs:mountFuncs,\n        destroyFuncs:destroyFuncs,\n        datas:datas\n    }\n    computes=[]\n    props=[]\n    initFuncs=[];\n    mountFuncs=[];\n    destroyFuncs=[]\n    datas=[]\n    return res\n}","import { IComponentMvvm } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { SetActiveRouter } from './router-state';\nimport { RefreshApp } from '../manager/start';\nimport { LogError, Trim } from '../util';\n\n\nlet matchedRouter:InnerRouter[]=[]\n\nlet appRouters:InnerRouter[]=[]\nlet cursor:number=0;\nlet firstVNode:VNode=null\n\n/*注册路由*/\nexport function RegisterRouter(routers:Router[]){\n    //将Router转换成InnerRouter\n    checkRouter(routers)\n    \n    routers.forEach(router=>{\n        appRouters.push(copyRouter(null,router))\n    })\n}\n/**输入合法性检查*/\nfunction checkRouter(routers:Router[]){\n    routers.forEach(router=>{\n        router.children=router.children?router.children:[]\n        \n        if(router.url!=null)\n            router.url=Trim(router.url.trim(),\"/\",\"right\");\n        if(router.redirect==null && (router.url==null || router.url==\"\")){\n            throw new Error(\"must specify url in router\")\n        }\n        router.params=router.params?router.params:[];\n        if(router.redirect==null){\n            if(router.url.indexOf(\"/\")!=0)\n                router.url= \"/\"+router.url;\n        }\n        checkRouter(router.children)\n    });\n}\n/**将Router转换成InnerRouter */\nfunction copyRouter(parent:InnerRouter,router:Router):InnerRouter{\n    let r:InnerRouter= {\n        url:router.url,\n        component:router.component,\n        components:router.components,\n        children:[],\n        parent:parent,\n        fullUrl:\"\",\n        params:router.params,\n        redirect:router.redirect\n    }\n    if(parent!=null){\n        if(router.redirect!=null)\n            r.redirect=parent.fullUrl+router.redirect;  \n        else  \n            r.fullUrl=parent.fullUrl+router.url;\n    }else{\n        r.fullUrl=router.url;\n    }\n    for(let i=0;i<router.children.length;i++){\n        r.children.push(copyRouter(r,router.children[i]))\n    }\n    return r\n}\n/**\n * matchtype 0 完全匹配  1 matchedRouter是当前location的前缀  2 不匹配\n */\nfunction matchRouter(matchedRouter:InnerRouter):{matchtype:number,params:{name:string,value:string}[]}{\n    let vinallaUrl=location.pathname\n    vinallaUrl=Trim(vinallaUrl,\"/\",\"right\");\n    let vinallaSlice=vinallaUrl.split(\"/\");\n    let matchedSlice=matchedRouter.fullUrl.split(\"/\");\n    let params:{name:string,value:string}[]=[];\n    for(var j=0;j<matchedSlice.length;j++){\n        if(vinallaSlice.length-1<j){\n            return {matchtype:2,params:[]};\n        }\n        if(/^\\:(\\w+)$/.test(matchedSlice[j]) ){\n            let name=RegExp.$1\n            params.push({name:name,value:vinallaSlice[j]})\n            continue;\n        }\n        if(matchedSlice[j]==vinallaSlice[j]){\n            continue;\n        }\n        return {matchtype:2,params:[]};\n    }\n    \n    let requireParams=matchedRouter.params;\n    let searchParams=getSearchParams();\n    params=params.concat(searchParams);\n    requireParams.forEach(rp=>{\n        let exist=params.find(p=>p.name==rp.name);\n        if(exist==null && rp.required){\n            throw new Error(\"router match failed,no matched params:\"+rp.name);\n        }\n    })\n    if(j==vinallaSlice.length){\n        return {matchtype:0,params:params};\n    }else{\n        return {matchtype:1,params:params};\n    }\n}\nfunction getSearchParams():{name:string,value:string}[]{\n    let searchSlice=location.search.split(\"?\")\n    let res:{name:string,value:string}[]=[]\n    if(searchSlice.length==2){\n        let params=searchSlice[1].split(\"&\")\n        params.forEach(p=>{\n            let name_value=p.split(\"=\")\n            if(name_value.length==2){\n                res.push({name:name_value[0],value:name_value[1]})\n            }\n        })\n    }\n    return res\n}\n\n\nlet matchcounter=0;\nexport function StartMatchUrl(routers?:InnerRouter[]):boolean{\n    if(matchcounter>10){\n        throw new Error(\"circular router match\");\n    }\n    if(routers==null){\n        routers=appRouters;\n    }\n    if(routers==appRouters){\n        matchcounter++;\n        matchedRouter=[];\n    }\n        \n    for(let i=0;i<routers.length;i++){\n        let router=routers[i];\n        if(router.redirect!=null){\n            SetActiveRouter(location.pathname,[]);\n            window.history.replaceState(null,\"\",router.redirect);\n            StartMatchUrl(appRouters);\n            return true;\n        }\n        let res=matchRouter(router);\n        if(res.matchtype==2){\n            continue;\n        }\n        if(res.matchtype==1){\n            if(router.component!=null || router.components!=null)\n                matchedRouter.push(router);\n            let find=StartMatchUrl(router.children);\n            if(find){\n                return true;\n            }\n            continue;\n        }\n        if(res.matchtype==0){\n            SetActiveRouter(location.pathname,res.params);\n            if(router.component!=null || router.components!=null)\n                matchedRouter.push(router);\n            return true;\n        }\n    }\n    return false;\n}\nexport function NextRouter(vnode:VNode,name?:string):IComponentMvvm{\n    if(appRouters==null){\n        throw new Error(\"no router specified\")\n    }\n    if(cursor==0){\n        firstVNode=vnode\n    }\n    if(cursor<matchedRouter.length){\n        let component=name?matchedRouter[cursor].components[name]:matchedRouter[cursor].component;\n        if(component==null){\n            throw new Error(\"component in router be null?\");\n        }\n        cursor++\n        return component\n    }else{\n        LogError(\"router match wrong\")\n        return null;\n    }\n    \n}\nexport function MoveBack(){\n    cursor--\n}\n\nexport interface Router{\n    url?:string\n    component?: IComponentMvvm\n    components?:{[name:string]:IComponentMvvm}\n    children?:Router[]\n    params?:{name:string,required:boolean}[],\n    redirect?:string\n}\ninterface InnerRouter extends Router{\n    parent:InnerRouter\n    children:InnerRouter[]\n    fullUrl:string\n}\n\nexport function NotifyUrlChange(){\n    matchcounter=0;\n    let matched=StartMatchUrl();\n    if(!matched){\n        throw new Error(\"no matched router\");\n    }\n    firstVNode.OnRouterChange()\n    RefreshApp()\n}\n\n\n","import { DirectiveMVVM } from './../mvvm/directive-mvvm';\nimport { VNodeStatus } from '../const';\nimport { Mvvm } from '../mvvm/mvvm';\nimport { OnDataChange } from './../models';\nimport { VNode } from './../vnode/vnode';\nimport { CleanTarget, SetTarget } from './observer';\n\n\nexport class Watcher{\n    private value:any\n    private deepRecord:any[]=[]\n\n    constructor(private mvvm:Mvvm|DirectiveMVVM,private vnode:VNode,public ExpOrFunc:string|Function,private cb:OnDataChange,private watchingArrayItem?:boolean){\n        this.value=this.getValue()\n        if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\"){\n            for(let i=0;i<this.value.length;i++){\n                this.deepRecord[i]=this.value[i]\n            }\n        }\n    }\n    private getValue(){\n        SetTarget(this)\n        let res=this.mvvm.$GetExpOrFunValue(this.ExpOrFunc)        \n        CleanTarget()\n        return res\n    }\n    /**用于返回当前缓存的值，主要针对computed */\n    GetCurValue(){\n        return this.value;\n    }\n    GetVNode(){\n        return this.vnode\n    }\n    Update(){\n        if(this.vnode.GetStatus()==VNodeStatus.ACTIVE){\n            let newval=this.getValue()\n            if(this.value!=newval){\n                this.cb(newval,this.value)\n                this.value=newval\n            }else{\n                //判断数组元素是否有变化\n                if(this.watchingArrayItem && toString.call(this.value)==\"[object Array]\" ){\n                    let diff=false\n                    for(let i=0;i<newval.length;i++){\n                        if(newval[i]!=this.deepRecord[i]){\n                            this.cb(newval,this.value)\n                            diff=true\n                            break\n                        }\n                    }\n                    if(diff){\n                        this.deepRecord=[]\n                        for(let i=0;i<newval.length;i++){\n                            this.deepRecord[i]=newval[i]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { NoticeCallback, RegisterNotice, RevokeNotice } from './../observer/notice-center';\nimport { EvalExp } from \"../eval\";\nimport { ReactiveComputed, ReactiveData, ReactiveKey } from \"../observer/observer\";\nimport { Watcher } from \"../observer/watcher\";\nimport { GetActiveRouter, WatchRouterChange } from \"../router/router-state\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { DomStatus, OnDataChange, RouterInfo } from './../models';\nimport { VinallaNode } from './../vnode/vinalla-node';\nimport { NotifyUrlChange } from '../router/router-manager';\nexport abstract class Mvvm {\n    private $data:any={}\n    protected $namespace=\"default\"\n\n    protected $treeRoot:VNode\n    \n    protected $dataItems:{name:string,value:any}[]=[]\n    protected $computeItems:{name:string,get:()=>any}[]=[]\n    private $isroot=false\n\n    protected get $router(){\n        return GetActiveRouter()\n    }\n\n    constructor(){\n    }\n    $initialize(){\n        this.$dataItems=this.$InitDataItems()\n        this.$computeItems=this.$InitComputeItems()\n        this.$treeRoot=this.$InitTreeroot()\n        this.$namespace=this.$InitNamespace()\n\n        this.$dataItems.forEach(item=>{\n            this.$data[item.name]=item.value\n            Object.defineProperty(this,item.name,{\n                get:()=>{\n                    return this.$data[item.name]\n                },\n                set:(value:any)=>{\n                    this.$data[item.name]=value\n                }\n            })\n        })\n        ReactiveData(this.$data)\n\n        this.$computeItems.forEach(item=>{\n            ReactiveComputed(this,this.$treeRoot,item.name,item.get)\n        })\n\n    }\n    $AttachChildren(){\n        this.$treeRoot.AttachChildren()\n    }\n    \n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    $ExtendMvvm():Mvvm{return this;}\n    \n    $SetValue(exp:string,value:any){\n        let keys=exp.split(\".\")\n        let target=this.$data\n        let hasTraget=true\n        for(let i=0;i<keys.length-1;i++){\n            if(target!=null)\n                target=target[keys[i]]\n            else{\n                hasTraget=false\n                break\n            }\n        }\n        if(hasTraget && target!=null)\n            target[keys[keys.length-1]]=value\n    }\n    $CreateWatcher(vnode:VNode,exp:string|Function,listener:OnDataChange,watchingArrayItem?:boolean):Watcher{\n        return new Watcher(this,vnode,exp,listener,watchingArrayItem)\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        this.$CreateWatcher(this.$treeRoot,exp,listener,watchingArrayItem)\n    }\n    \n    $OnDestroy(){\n        this.$treeRoot.OnDestroy()\n    }\n    $SetRoot(isroot:boolean){\n        this.$isroot=isroot\n    }\n    $IsRoot(){\n        return this.$isroot\n    }\n    $GetDataItems(){\n        return this.$dataItems\n    }\n    $GetComputedItems(){\n        return this.$computeItems\n    }\n    $Refresh(){\n        this.$treeRoot.Refresh()\n    }\n    $RevokeMethod(method:string,...params:any[]){\n        if(typeof (this as any)[method]==\"function\")\n            (this as any)[method].apply(this,params)\n        else\n            throw new Error(method +\" is not a function\")\n    }\n    /**动态的增加响应式数据 */\n    $AddReactiveData(name:string,value:any){\n        this.$data[name]=value;\n        Object.defineProperty(this,name,{\n            get:()=>{\n                return this.$data[name]\n            },\n            set:(value:any)=>{\n                this.$data[name]=value\n            }\n        });\n        ReactiveKey(this.$data,name);\n        ReactiveData(value);\n    }\n    private getAnchorNode(name:string):VinallaNode{\n        return this.$treeRoot.GetAnchor(name);\n    }\n    GetRef(ref:string){\n        let vnode= this.$treeRoot.GetAnchor(ref);\n        if(vnode!=null && vnode.DomSet.length>0)\n            return vnode.DomSet[0].dom;\n        else\n            return null;\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        let res=(new DOMParser()).parseFromString(html, \"text/html\").body;\n        let anchorNode=this.getAnchorNode(anchor);\n        if(anchorNode){\n            for(let i=0;i<res.childNodes.length;i++){\n                let domtree=TraverseDom(res.childNodes[i]);\n                let vnode=NewVNode(domtree,this,anchorNode);\n                vnode.AttachChildren();\n                anchorNode.Children.push(vnode);\n                vnode.Render();\n            }\n            anchorNode.Refresh();\n        }else{\n            throw new Error('anchor node '+anchor+\" not exist\");\n        }\n        \n    }\n    /**注册消息 */\n    protected $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$treeRoot,cb);\n    }\n    /**触发消息 */\n    protected $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**监视路由变化 */\n    protected $onRouterChange(callbck:(newrouter:RouterInfo,oldrouter:RouterInfo)=>void){\n        WatchRouterChange(this.$treeRoot,callbck);\n    }\n    $NavigateTo(url:string){\n        window.history.replaceState(null,null,url)\n        NotifyUrlChange()\n    }\n\n    abstract $InitDataItems():{name:string,value:any}[];\n    abstract $InitComputeItems():{name:string,get:(()=>any)}[];\n    abstract $InitNamespace():string;\n\n    abstract $Render():DomStatus;\n    \n    abstract $InitTreeroot():VNode;\n\n    \n}","var EvalExp=function(context,exp,attachObj){\n    var res;\n    var newcontext=context\n    if(attachObj!=null){\n        newcontext=Object.assign(context,$attachObj)\n    }\n    try {\n        with(newcontext){\n            res=eval(exp)\n        }\n        return res\n    } catch (error) {\n        console.error(\"eval \"+exp+\" failed\")\n        console.error(error)\n    }\n    return \"\" \n}\n\nexports.EvalExp=EvalExp\n","import { IComponentMvvm } from './../models';\nimport { ComponentOption, ComponentMvvmFactoryOption } from '../models';\nimport { HttpGet, LogError } from \"../util\";\nimport { TraverseDom } from \"../vdom/vdom\";\nimport { VDom } from './../vdom/vdom';\n\n\nlet repository:{[id:string]:ComponentMvvmFactoryOption}={}\n\nlet id=0;\nexport function ComponentAutoId(){\n    let count=id++;\n    let str=\"\";\n    while(count>0){\n        str+=\"_\";\n        count--;\n    }\n    return str;\n}\n\nexport function Id(namespace:string,name:string){\n    return namespace+\"::\"+name;\n}\n\nexport function RegisterComponent(name:string,namespace:string,constructor:IComponentMvvm,option:ComponentOption) {\n    let factoryOption:ComponentMvvmFactoryOption={\n        $constructor:constructor,\n        $id:Id(namespace,name),\n        $preProcess:false,\n        $domtree:null,\n        $origin:option\n    }\n    if(repository[factoryOption.$id]!=null)\n        throw new Error(\"component \"+factoryOption.$id+\" already exists\")\n    repository[factoryOption.$id]=factoryOption\n}\nexport function RegisterComponentDirect(option:ComponentMvvmFactoryOption){\n    if(repository[option.$id]!=null)\n        throw new Error(\"component \" + option.$id + \" has already exist\")\n    repository[option.$id]=option\n}\n\nexport function InitComponent(name: string, namespace: string): IComponentMvvm {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if (factory && !factory.$preProcess){\n        preProcess(factory)\n        factory.$preProcess=true\n    }\n    if(factory){\n        return factory.$constructor\n    }else{\n        throw new Error(\"component \"+Id(namespace,name)+\" not exists\")\n    }\n    \n}\nexport function GetDomTree(name: string, namespace: string){\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    let factory = repository[Id(namespace,name)]\n    if(factory==null)\n        return null\n    return factory.$domtree\n}\nexport function IsComponentRegistered(name: string, namespace: string) {\n    name = name.toLowerCase()\n    namespace = namespace.toLowerCase()\n    if (repository[Id(namespace,name)])\n        return true\n    else\n        return false\n}\nfunction preProcess(option: ComponentMvvmFactoryOption) {\n    //模版\n    if (option.$origin.templateUrl != null) {\n        option.$origin.template = HttpGet(option.$origin.templateUrl)\n        if (option.$origin.template == null) {\n            LogError(\"path \" + option.$origin.templateUrl + \" not found\")\n            return\n        }\n    }\n\n    let res=(new DOMParser()).parseFromString(option.$origin.template, \"text/html\").body\n    if(res.children.length>1)\n        throw new Error(option.$origin.name+\"::\"+option.$origin.namespace+\" template should have only one root\")\n    if(res.children.length==1)\n        option.$domtree = TraverseDom(res.children[0])\n    else{\n        if(res.childNodes.length==1)\n            option.$domtree = TraverseDom(res.childNodes[0])\n        else\n            throw new Error(\"template should not be empty\")\n    }\n    //样式\n    if (option.$origin.styleUrl != null) {\n        option.$origin.style = HttpGet(option.$origin.styleUrl)\n    }\n    if (option.$origin.style != null) {\n        // let css = option.style.replace(/(?!\\s)([^\\{\\}]+?)(?=\\s*\\{[^\\{\\}]*\\})/g, function (str) {\n        //     return str + \"[\" + option.$id + \"]\"\n        // })\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        style.innerHTML = option.$origin.style;\n        document.getElementsByTagName('head')[0].appendChild(style);\n        addAttr(option.$domtree, option.$id)\n    }\n}\nfunction addAttr(dom: VDom, attr: string) {\n    dom.AddAttr(attr)\n    if (dom.NodeType == 1) {\n        dom.Children.forEach(child => {\n            addAttr(child, attr)\n        })\n    }\n}\n","import { AppMvvm } from './../mvvm/app-mvvm';\nimport { GetApp } from \"./app-manager\";\nimport {StartMatchUrl} from \"../router/router-manager\"\nlet apps:AppMvvm[]=[]\nexport function Start() {\n    let appscons=GetApp()\n    appscons.forEach(App=>{\n        StartMatchUrl()\n        let mvvm=new App()\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        mvvm.$SetRoot(true)\n        apps.push(mvvm)\n        let content = mvvm.$Render()\n        let target=document.querySelector(mvvm.$InitEl())\n        \n        let rootdom=content.dom as HTMLElement;\n        if(rootdom.style.display==\"none\"){\n            rootdom.style.display=\"\";\n        }\n\n        target.parentElement.replaceChild(content.dom, target)\n    })\n    \n}\nexport function RefreshApp(){\n    apps.forEach(app=>app.$Refresh())\n}","import { REG_IN, REG_OUT, VNodeStatus } from \"../const\";\nimport { GetInnerDir } from '../directive/inner-dir';\nimport { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { NewVNode, VDom } from \"../vdom/vdom\";\nimport { PRE } from './../const';\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { PlugNode } from \"./plug-node\";\nimport { VNode } from \"./vnode\";\n\nexport class CustomNode extends VNode{\n    //输入与输出值\n    private ins_pure:{[name:string]:any}={}\n    private ins_exp:{[name:string]:string}={}\n    private outs:{[name:string]:string}={}\n\n    /**获取自定义组建上的style 或者r-style属性 */\n    private styles:{[key:string]:string}={};\n    /**获取自定义组建上的class 或者r-class属性 */\n    private classes:{[key:string]:string}={};\n\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public SurroundMvvm:ComponentMvvm) {\n        super(Vdom,mvvm,Parent)\n        if(this.Vdom){\n            for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n                let name=this.Vdom.Attrs[i].Name;\n                let value=this.Vdom.Attrs[i].Value;\n                //是否是样式\n                if(name==\"style\" ||name==PRE+\"style\"){\n                    this.styles[name]=value;\n                    continue;\n                }\n                if(name==\"class\"||name==PRE+\"class\"){\n                    this.classes[name]=value;\n                    continue;\n                }\n                //输入\n                let ins=this.SurroundMvvm.$InitIns()\n                for(let i=0;i<ins.length;i++){\n                    let prop=ins[i]\n                    \n                    if(REG_IN.test(name) && prop.name==RegExp.$1){\n                        this.ins_exp[RegExp.$1]=value\n                        break\n                    }else{\n                        if(prop.name==name){\n                            this.ins_pure[name]=value\n                            break\n                        }\n                    }\n                }\n                //输出\n                let outs=this.SurroundMvvm.$InitOuts()\n                for(let i=0;i<outs.length;i++){\n                    let event=outs[i]\n                    \n                    if(REG_OUT.test(name) && event.name==RegExp.$1){\n                        this.outs[RegExp.$1]=value\n                        break\n                    }\n                }\n            }\n        }\n        \n    }\n    AddIns(name:string,exp:string){\n        this.ins_exp[name]=exp\n    }\n    /**获取跟slot匹配的模版内容 */\n    GetTemplate(name:string):PlugNode{\n        for(let i=0;i<this.Children.length;i++){\n            let template=this.Children[i] as PlugNode\n            if(template.templatename==name)\n                return template\n        }\n        return null\n    }\n    Render(): DomStatus[] {\n        let dom=this.SurroundMvvm.$Render();\n        this.DomSet=[dom];\n        \n        if(this.styles['style']!=null){\n            let exp=this.styles['style'];\n            let styleitems=exp.split(\";\");\n            styleitems.forEach(item=>{\n                let kv=item.split(\":\");\n                ((dom.dom as HTMLElement).style as any)[kv[0]]=kv[1];\n            });\n        }\n        if(this.styles[PRE+'style']!=null){\n            let styledir=GetInnerDir(PRE+\"style\");\n            let exp=this.styles[PRE+'style'];\n            styledir(exp,this);\n        }\n        if(this.classes['class']!=null){\n            let classitem=this.classes['class'].split(/\\s+/);\n            (dom.dom as HTMLElement).classList.add(...classitem);\n        }\n        if(this.classes[PRE+\"class\"]!=null){\n            let classdir=GetInnerDir(PRE+'class');\n            let exp=this.classes[PRE+'class'];\n            classdir(exp,this);\n        }\n        return this.DomSet\n    }\n    \n    AttachChildren(){\n        if(this.Vdom!=null){\n            //制造中间节点管理template\n            let defaultTemplate=new PlugNode(null,this.mvvm,null,\"default\")\n            let templates:{[name:string]:VNode}={\"default\":defaultTemplate}\n            //解析子节点\n            for (let i = 0; i < this.Vdom.Children.length; i++) {\n                let childnode=this.Vdom.Children[i]\n\n                let name=childnode.GetAttr(\"slot\")\n                if(name==null || name==\"\"){\n                    name=\"default\"\n                }\n                if(templates[name]==null){\n                    templates[name]=new PlugNode(null,this.mvvm,null,name)\n                }\n                let vchild=NewVNode(childnode,templates[name].mvvm,templates[name])\n                \n                vchild.AttachChildren()\n                templates[name].Children.push(vchild)\n            }\n            for(let name in templates){\n                this.Children.push(templates[name])\n            }\n        }\n    }\n\n    GetInValue(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return this.ins_pure[prop]\n        if(this.ins_exp[prop]!=null)\n            return this.mvvm.$GetExpOrFunValue(this.ins_exp[prop])\n        return null\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n    \n    \n    Refresh() {\n        this.SurroundMvvm.$Refresh()\n    }\n    Update(){\n        this.SurroundMvvm.$Update()\n    }\n\n    OnDestroy(){\n        this.SurroundMvvm.$OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.SurroundMvvm.$SetStatus(status)\n    }\n    Reflow(){\n    }\n    \n}","import { VNode } from '../vnode/vnode';\nimport { Watcher } from \"./watcher\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { WatcherCollecter } from './watcher-collect';\n\nlet $target:Watcher\n\nexport function SetTarget(target:Watcher){\n    $target=target\n}\nexport function CleanTarget(){\n    $target=null\n}\n    \nexport function ReactiveData(data:any){\n    if(data!=null && typeof data==\"object\"){\n        Object.keys(data).forEach(key=>{\n            ReactiveKey(data,key)\n            ReactiveData(data[key])\n        })\n    }\n}\nexport function ReactiveKey(data:any,key:string){\n    let collecter=new WatcherCollecter(key)        \n    let value = data[key]\n    if(toString.call(value)==\"[object Array]\"){\n        reactiveArray(value,collecter)\n    }\n    Object.defineProperty(data, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            return value\n        },\n        set: (newval)=>{\n            if (newval != value) {\n                value=newval\n                if(toString.call(value)==\"[object Array]\"){\n                    reactiveArray(value,collecter)\n                }\n                ReactiveData(newval)                    \n                collecter.Notify()\n            }\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n    \nfunction reactiveArray(array:any[],collecter:WatcherCollecter){\n    if(array.push!=Array.prototype.push)\n        return\n    Object.defineProperty(array,\"push\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let old=array.length\n            let res=Array.prototype.push.call(array,...params)\n            for(let i=old;i<res;i++){\n                ReactiveKey(array,\"\"+i)\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"pop\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.pop.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"splice\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.splice.call(array,...params)\n            if(params.length>2){\n                let newitems=params.slice(2)\n                newitems.forEach(item=>{\n                    let index=array.indexOf(item)\n                    ReactiveKey(array,\"\"+index)\n                })\n            }\n            collecter.Notify()                \n            return res\n        }\n    })\n    Object.defineProperty(array,\"shift\",{\n        enumerable:false,\n        configurable:true,\n        value:(...params:any[])=>{\n            let res=Array.prototype.shift.call(array,...params)\n            collecter.Notify()                \n            return res\n        }\n    })\n}\n    \nexport function ReactiveComputed(mvvm:Mvvm,vnode:VNode,key:string,func:()=>any){\n    let collecter=new WatcherCollecter(key)\n    let firstget=true\n    let value:any\n    \n    Object.defineProperty(mvvm, key, {\n        get: ()=> {\n            if($target!=null){\n                collecter.AddTarget($target)\n            }\n            if(firstget){\n                let old=$target\n                $target=null\n                let watcher=new Watcher(mvvm,vnode,func,(newval)=>{\n                    value=newval\n                    collecter.Notify()\n                })\n                value=watcher.GetCurValue();\n                $target=old\n                firstget=false\n            }\n            return value\n        },\n        enumerable:true,\n        configurable:true\n    })\n}\n\n","import { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from \"../const\";\n\nexport type NoticeCallback=(...params:any[])=>void;\nlet notices:{[notice:string]:{vnode:VNode,cb:NoticeCallback}[]}={};\n\nexport function RegisterNotice(notice:string,vnode:VNode,cb:NoticeCallback){\n    if(notices[notice]==null)\n        notices[notice]=[];\n    notices[notice].push({vnode:vnode,cb:cb});\n\n}\nexport function RevokeNotice(notice:string,...params:any[]){\n    if(notices[notice]!=null){\n        notices[notice]=notices[notice].filter(item=>{\n            return item.vnode.GetStatus()!=VNodeStatus.DEPRECATED;\n        });\n        notices[notice].forEach(item=>{\n            if(item.vnode.GetStatus()==VNodeStatus.ACTIVE){\n                item.cb(...params);\n            }\n        });\n    }\n}","import { IDirectiveConstructor } from \"../models\";\nimport { Id } from \"./components-manager\";\n\nlet repository:{[id:string]:IDirectiveConstructor}={}\n\nexport function RegisterDirective(name:string,namespace:string,constructor:IDirectiveConstructor){\n    if(repository[Id(namespace,name)]!=null)\n        throw new Error(\"directive \"+Id(namespace,name)+\" already exists\")\n    repository[Id(namespace,name)]=constructor\n}\nexport function GetDirectiveCon(name:string,namespace:string):IDirectiveConstructor{\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    let constructor=repository[Id(namespace,name)]\n    return constructor\n}\nexport function IsDirectiveRegistered(name:string,namespace:string){\n    name=name.toLowerCase()\n    namespace=namespace.toLowerCase()\n    if(repository[Id(namespace,name)]!=null)\n        return true\n    else\n        return false\n}\n","import { PRE } from '../const';\nimport { VNode } from '../vnode/vnode';\nimport { Classes } from \"./class\";\nimport { OnEvent } from './event';\nimport { Href } from './href';\nimport { Html } from \"./html\";\nimport { DirModel } from './model';\nimport { Style } from \"./style\";\n\nlet innerDirs:{[name:string]:InnerDirective}={}\nfunction RegisterInnerDir(name:string,comiple:InnerDirective){\n    if(innerDirs[name]!=null)\n        throw new Error(\"inner directive \"+name+\" already exists\")\n    innerDirs[name]=comiple\n}\n\nexport function GetInnerDir(name:string){\n    return innerDirs[name]\n}\n\nexport interface InnerDirective{\n    (exp:string,vnode:VNode,options?:string[]):void\n}\n\n\nRegisterInnerDir(PRE+\"href\",Href)\nRegisterInnerDir(PRE+\"model\",DirModel)\nRegisterInnerDir(PRE+\"on\",OnEvent)\nRegisterInnerDir(PRE+\"html\",Html)\nRegisterInnerDir(PRE+\"class\",Classes)\nRegisterInnerDir(PRE+\"style\",Style)","import { RouterInfo, RouterChangeCallback } from './../models';\nimport { VNode } from '../vnode/vnode';\nimport { VNodeStatus } from '../const';\n\nclass _RouterInfo implements RouterInfo{\n    constructor(public path:string,public params:{name:string,value:string}[]){\n\n    }\n    getParam(name:string):string{\n        let p=this.params.find(p=>p.name==name)\n        return p && p.value ||null\n    }\n}\n\nlet active:RouterInfo=new _RouterInfo(\"\",[]);\nlet previous:RouterInfo=null;\n\nlet listeners:{cb:RouterChangeCallback,vnode:VNode}[]=[]\n\nexport function SetActiveRouter(path:string,params:{name:string,value:any}[]){\n    previous=active;\n    active=new _RouterInfo(path,params)\n\n    listeners= listeners.filter(listen=>listen.vnode.GetStatus()!=VNodeStatus.DEPRECATED)\n    listeners.forEach(listen=>{\n        if(listen.vnode.GetStatus()==VNodeStatus.ACTIVE)\n            listen.cb(active,previous)\n    })\n}\nexport function GetActiveRouter(){\n    return {active:active,previous:previous}\n}\nexport function WatchRouterChange(vnode:VNode,listener:RouterChangeCallback){\n    listeners.push({cb:listener,vnode:vnode})\n}\n\n\n","import { IAppMvvm } from './../models';\n\nlet apps:IAppMvvm[]=[]\n\nexport function RegisterApp(app:IAppMvvm){\n    apps.push(app)\n}\nexport function GetApp(){\n    return apps\n}","import { EvalExp } from \"../eval\";\nimport { OnDataChange, Prop } from \"../models\";\nimport { NoticeCallback, RegisterNotice, RevokeNotice } from \"../observer/notice-center\";\nimport { Watcher } from \"../observer/watcher\";\nimport { DirectiveNode } from './../vnode/directive-node';\nimport { VinallaNode } from './../vnode/vinalla-node';\nexport class DirectiveMVVM{\n    \n    $Name:string\n    $element:HTMLElement\n\n    $Ins:Prop[]=[]\n    $Outs:string[]=[]\n\n    $InitFuncs:string[]=[]\n    $MountFuncs:string[]=[]\n    $DestroyFuncs:string[]=[]\n    \n    private $directive:DirectiveNode;\n    private $vnode:VinallaNode;\n\n    $Initialize(directive:DirectiveNode,vnode:VinallaNode){\n        this.$directive=directive;\n        this.$vnode=vnode;\n        this.$InitFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        });\n    }\n    \n    $OnDestroy(){\n        this.$DestroyFuncs.forEach(destroy=>{\n            (this as any)[destroy].call(this)\n        })\n    }\n    \n    $Render(){\n        this.$Ins.forEach(prop=>{\n            let inName=this.$directive.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$Name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$vnode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n        this.$element=(this.$vnode.DomSet[0].dom as HTMLElement)\n        this.$MountFuncs.forEach(func=>{\n            (this as any)[func].call(this)\n        })\n    }\n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$Name,prop.name,prop.type)\n        }\n    }\n    $Watch(exp:string|Function,listener:OnDataChange,watchingArrayItem:boolean=false){\n        new Watcher(this,this.$vnode,exp,listener,watchingArrayItem)\n    }\n    $GetExpOrFunValue(expOrFunc:string|Function):any{\n        let res:any;\n        if(typeof expOrFunc == \"string\"){\n            res=EvalExp(this,expOrFunc)\n        }\n        if(typeof expOrFunc ==\"function\"){\n            res=expOrFunc.call(this)\n        }\n        return res;\n    }\n    /**注册消息 */\n    $on(notice:string,cb:NoticeCallback){\n        RegisterNotice(notice,this.$vnode,cb);\n    }\n    /**触发消息 */\n    $broadcast(notice:string,...params:any[]){\n        RevokeNotice(notice,...params);\n    }\n    /**动态添加节点 */\n    $AddFragment(html:string,anchor:string){\n        this.$vnode.mvvm.$AddFragment(html,anchor);\n    }\n}","import { DomStatus } from '../models';\nimport { VNode } from '../vnode/vnode';\nimport { Mvvm } from './mvvm';\nexport class AppMvvm extends Mvvm{\n    protected $el:string=\"\"\n    \n    \n    $Render(): DomStatus {\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitEl():string{\n        throw new Error(\"Method not implemented.\");\n    }\n}","import { DomStatus, Event, Prop } from \"../models\";\nimport { TypeOf } from \"../util\";\nimport { CustomNode } from \"../vnode/custom-node\";\nimport { VNode } from \"../vnode/vnode\";\nimport { VNodeStatus } from './../const';\nimport { Mvvm } from './mvvm';\nexport class ComponentMvvm extends Mvvm{\n    \n\n    private $fenceNode:CustomNode\n    private $name:string=\"\"\n    \n    private $ins:Prop[]=[]\n    private $outs:Event[]=[]\n\n    \n    $initialize(){\n        super.$initialize()\n\n        this.$ins=this.$InitIns()\n        this.$outs=this.$InitOuts()\n        this.$name=this.$InitName()\n\n        this.$ins.forEach(prop=>{\n            let inName=this.$fenceNode.GetIn(prop.name)\n            if(inName==null && prop.required){\n                throw new Error(\"component \\'\"+this.$name+\"\\' need prop \\'\"+prop.name+\"'\")\n            }\n            if(inName!=null){\n                if(inName.const){\n                    (this as any)[prop.origin]=inName.value\n                }else{\n                    Object.defineProperty(this,prop.origin,{\n                        get:()=>{\n                            let newvalue=this.$fenceNode.mvvm.$GetExpOrFunValue(inName.value);\n                            this.$checkProp(prop,newvalue);\n                            return newvalue;\n                        }\n                    })\n                }\n            }\n        })\n\n        \n    }\n    \n    private $checkProp(prop:Prop,value:any){\n        let error=(name:string,prop:string,type:string)=>{\n            throw new Error(\"component \\'\"+name+\"\\' prop \\'\"+prop+\"\\' not receive \"+type)\n        }\n        if(prop.type==\"array\" && toString.call(value)!=\"[object Array]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"object\" && toString.call(value)!=\"[object Object]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"number\" && toString.call(value)!=\"[object Number]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"boolean\" && toString.call(value)!=\"[object Boolean]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n        if(prop.type==\"string\" && toString.call(value)!=\"[object String]\"){\n            error(this.$name,prop.name,prop.type)\n        }\n    }\n\n    $Render():DomStatus{\n        let doms=this.$treeRoot.Render()\n        return doms[0]\n    }\n    \n    $Update(){\n        this.$treeRoot.Update()\n    }\n    $SetStatus(status:VNodeStatus){\n        this.$treeRoot.SetStatus(status)\n    }\n    \n    \n    $Emit(event:string,...data:any[]){\n        if(this.$fenceNode!=null && this.$fenceNode.mvvm!=null){\n            let e=this.$outs.find(out=>{\n                return out.name==event;\n            });\n            if(e==null){\n                throw new Error(\"no specified event \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            if(data.length!=e.paramsType.length){\n                throw new Error(\"no specified params \"+event+\" at component \"+this.$namespace+\"::\"+this.$name)\n            }\n            for(let i=0;i<e.paramsType.length;i++){\n                if(TypeOf(data[i])!=e.paramsType[i]){\n                    throw new Error(\"params expected \"+e.paramsType[i]+\",but received \"+toString.call(data[i])+\" at component \"+this.$namespace+\"::\"+this.$name)\n                }\n            }\n            let method=this.$fenceNode.GetOut(event)\n            this.$fenceNode.mvvm.$RevokeMethod(method,...data)\n        }\n    };\n    \n    $OnRouterChange(){\n        this.$treeRoot.OnRouterChange()\n    }\n    $GetFenceNode(){\n        return this.$fenceNode\n    }\n    $SetFenceNode(node:CustomNode){\n        this.$fenceNode=node\n    }\n\n    \n    $InitNamespace(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitDataItems(): {name:string,value:any}[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitComputeItems(): { name: string; get: () => any }[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitName():string{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitIns():Prop[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitOuts():Event[]{\n        throw new Error(\"Method not implemented.\");\n    }\n    $InitTreeroot(): VNode {\n        throw new Error(\"Method not implemented.\");\n    }\n    $GetIns(){\n        return this.$ins\n    }\n}","import { RegisterDirective } from \"../manager/directive-manager\";\nimport { DirectiveOption, IDirectiveConstructor } from \"../models\";\nimport { FetchProperty } from \"./property\";\n\nexport function Directive(option:DirectiveOption){\n    checkDirectiveOption(option)\n    let res=FetchProperty()\n    return function(target:IDirectiveConstructor){\n        let constructor= class $DirectiveMvvm extends target{\n            $Name=option.name\n            $Namespace=option.namespace\n            $Ins=res.props\n            $Out=option.events\n            $InitFuncs=res.initFuncs\n            $MountFuncs=res.mountFuncs\n            $DestroyFuncs=res.destroyFuncs\n        }\n        RegisterDirective(option.name,option.namespace,constructor)\n    }\n}\nfunction checkDirectiveOption(option:DirectiveOption){\n    option.events=option.events?option.events:[]\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { RegisterApp } from \"../manager/app-manager\";\nimport { AppOption, IAppMvvm, DomStatus } from \"../models\";\nimport { NewVNode, TraverseDom } from \"../vdom/vdom\";\nimport { VNode } from \"../vnode/vnode\";\nimport { FetchProperty } from \"./property\";\n\n\n\nexport function App(option:AppOption){\n    checkAppOption(option)\n    let res=FetchProperty()\n    return function(target:IAppMvvm){\n        let constructor= class $AppMvvm extends target{\n            \n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            \n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot(): VNode {\n                let dom=document.querySelector(option.el)\n                if(dom==null){\n                    throw new Error(\"no specified element \"+option.el)\n                }\n                let vdom=TraverseDom(dom)\n                let vnode=NewVNode(vdom,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitEl(){\n                return option.el\n            }\n            \n        }\n        RegisterApp(constructor)\n    }\n}\nfunction checkAppOption(option:AppOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VDom } from \"../vdom/vdom\";\nimport { VNode } from \"./vnode\";\n\nexport class PlugNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: Mvvm,public Parent:VNode,public templatename:string) {\n        super(vdom,mvvm,Parent)\n    }\n    \n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            let doms=child.Render()\n            this.DomSet=this.DomSet.concat(doms)\n        })\n        return this.DomSet\n    }\n    \n    Update(){\n        let children: VNode[] = []\n        this.Children.forEach(child => {\n            children.push(child)\n        })\n        children.forEach(child => {\n            child.Update()\n        })\n    }\n    \n}","import { DomStatus } from '../models';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { MoveBack, NextRouter } from \"../router/router-manager\";\nimport { VDom } from '../vdom/vdom';\nimport { DomType, VNodeStatus } from './../const';\nimport { IComponentMvvm } from './../models';\nimport { CustomNode } from \"./custom-node\";\nimport { VNode } from \"./vnode\";\n\nexport class RouterNode extends VNode{\n    private lastConstructor:IComponentMvvm=null;\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private routername:string) {\n        super(Vdom,mvvm,Parent)\n    }\n\n    Render() :DomStatus[]{\n        let router=NextRouter(this,this.routername);\n        this.lastConstructor=router;\n        if(router!=null){\n            let vnode=this.instance(router)\n            this.Children=[vnode]\n            this.DomSet=vnode.Render()\n            MoveBack()\n        }\n        return this.DomSet\n        \n    }\n    OnRouterChange(){\n        let constructor=NextRouter(this,this.routername);\n        if(this.lastConstructor!=constructor){\n            this.lastConstructor=constructor;\n            //释放旧的资源\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n\n            if(constructor!=null){\n                let vnode=this.instance(constructor)\n                this.Children=[vnode]\n                this.DomSet.forEach(dom=>dom.type=DomType.DELETE)\n                this.DomSet= this.DomSet.concat(vnode.Render())\n                this.Parent.Reflow();\n                MoveBack()\n            }else{\n                this.Children=[]\n                this.DomSet.forEach(dom=>{\n                    dom.type=DomType.DELETE\n                })\n            }\n        }else{\n            this.Children.forEach(child=>child.OnRouterChange())\n        }\n        \n    }\n    private instance(construct:IComponentMvvm):VNode{\n        let mvvm=new construct()\n        let custnode=new CustomNode(null,this.mvvm,null,mvvm)\n        mvvm.$SetFenceNode(custnode)\n\n        mvvm.$initialize()\n        mvvm.$AttachChildren()\n        \n        return custnode\n    }\n    Update(){\n\n    }\n    Reflow(){\n    }\n}\n","import { DomStatus } from './../models';\nimport { VNode } from \"./vnode\";\n\nexport class TemplateNode extends VNode{\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    Update(){\n\n    }\n}","import { DomType } from './../const';\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { VNode } from \"./vnode\";\nimport { VDom, NewVNode, Priority } from \"../vdom/vdom\";\nimport { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\n\nexport class IfNode extends VNode {\n    constructor(public Vdom:VDom,public mvvm: Mvvm, public Parent: VNode, private ifExp: string) {\n        super(Vdom,mvvm, Parent)\n    }\n    \n    AttachChildren() {\n        let boolvalue=this.mvvm.$GetExpOrFunValue(this.ifExp)\n        if(boolvalue){\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n        }\n    }\n    Render():DomStatus[]{\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        this.mvvm.$CreateWatcher(this,this.ifExp, newvalue=>this.reImpletement(newvalue))\n        return this.DomSet\n    }\n    Update(){\n        let attached = this.mvvm.$GetExpOrFunValue(this.ifExp)\n        this.reImpletement(attached)\n    }\n\n    private reImpletement(newvalue:boolean){\n        if (newvalue) {\n            let vnode=NewVNode(this.Vdom,this.mvvm,null,Priority.NORMAL)\n            vnode.AttachChildren()\n            this.Children=[vnode]\n            this.Children.forEach(child=>{\n                this.DomSet=this.DomSet.concat(child.Render())\n            })\n            this.Parent.Reflow();\n        }else{\n            this.Children.forEach(child=>{\n                child.SetStatus(VNodeStatus.DEPRECATED);\n                child.OnDestroy();\n            });\n            this.Children=[]\n            this.DomSet.forEach(dom=>{\n                dom.type=DomType.DELETE\n            });\n        }\n    }\n\n    OnDestroy(){\n        if(this.Children.length>0)\n            this.Children[0].OnDestroy()\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        if(this.Children.length>0)\n            this.Children[0].SetStatus(status)\n    }\n    \n}","import { Watcher } from './watcher';\nimport {RefreshApp} from \"../manager/start\"\n\nlet queue:Watcher[]=[]\nlet settimeout=false\nexport function AddWatcher(watcher:Watcher){\n    if(queue.indexOf(watcher)==-1)\n        queue.push(watcher)\n    if(!settimeout){\n        settimeout=true\n        \n        setTimeout(() => {\n            RevokeWatcher()\n            settimeout=false            \n        }, 0);\n    }\n}\nexport function RevokeWatcher(){\n    let temp:Watcher[]=[]\n    queue.forEach(q=>temp.push(q))\n    queue=[]\n    temp.forEach(watcher=>watcher.Update())\n    if(queue.length>0){\n        RevokeWatcher()\n    }else{\n        RefreshApp()\n    }\n}","import { Watcher } from \"./watcher\";\nimport { AddWatcher } from \"./msg-queue\";\nimport { VNodeStatus } from \"../const\";\n\nexport class WatcherCollecter{\n    private watches:Watcher[]=[]\n    constructor(private key:string){\n    }\n    GetKey(){\n        return this.key\n    }\n    AddTarget(watcher:Watcher){\n        if(this.watches.indexOf(watcher)==-1)\n            this.watches.push(watcher)\n    }\n    \n    Notify(){\n        this.watches=this.watches.filter(watcher=>{\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.ACTIVE ){\n                AddWatcher(watcher)\n                return true\n            }\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.INACTIVE )\n                return true\n            if(watcher.GetVNode().GetStatus()==VNodeStatus.DEPRECATED )\n                return false\n        })\n    }\n}","import { DomType } from './const';\nimport { AppMvvm } from './mvvm/app-mvvm';\nimport { ComponentMvvm } from './mvvm/component-mvvm';\nimport { DirectiveMVVM } from './mvvm/directive-mvvm';\nimport { VDom } from './vdom/vdom';\n\ninterface BaseOption{\n    namespace?:string,\n}\nexport interface ComponentOption extends BaseOption{\n    events?:Event[],\n    name?:string,\n    template?:string,\n    templateUrl?:string,\n    style?:string,\n    styleUrl?:string\n    \n}\nexport interface AppOption extends BaseOption{\n    el:string\n}\nexport interface DirectiveOption extends BaseOption{\n    name:string\n    events?:string[]\n}\n\nexport type ParamType=\"array\"|\"object\"|\"number\"|\"string\"|\"boolean\"\nexport interface Prop{\n    name:string\n    origin:string\n    required:boolean\n    type?:ParamType\n}\nexport interface Event{\n    name:string,\n    paramsType:ParamType[]\n}\nexport interface OnDataChange {\n    (newvalue:any,oldvalue:any):void\n}\n/**for语句 */\nexport class ForExp{\n    constructor(public itemExp:string,public arrayExp:string){}\n}\n\n\n\nexport interface IComponentMvvm{\n    new ():ComponentMvvm\n}\n\nexport interface IAppMvvm{\n    new ():AppMvvm\n}\nexport interface IDirectiveConstructor{\n    new ():DirectiveMVVM\n}\nexport interface ComponentMvvmFactoryOption {\n    $constructor:IComponentMvvm\n    $preProcess:boolean\n    $id:string,\n    $domtree:VDom,\n    $origin:ComponentOption\n}\nexport interface RouterInfo{\n    path:string,\n    params:{\n        name:string,\n        value:string\n    }[],\n    getParam(name:string):string\n}\n\nexport type RouterChangeCallback=(newrouter:RouterInfo,oldrouter:RouterInfo)=>void\n\nexport interface DomStatus{\n    dom:Node,\n    type:DomType\n}","import { VNodeStatus } from \"../const\";\nimport { EvalExp } from '../eval';\nimport { DomStatus, ForExp } from \"../models\";\nimport { Mvvm } from '../mvvm/mvvm';\nimport { NewVNode, Priority, VDom } from '../vdom/vdom';\nimport { DomType } from './../const';\nimport { VNode } from \"./vnode\";\nimport { TemplateNode } from \"./template-node\";\n\nexport class ForNode extends VNode{\n    private forExp:ForExp\n    private indexName:string\n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode,private originForExp:string) {\n        super(Vdom,mvvm,Parent)\n        let items=this.originForExp.trim().split(\";\");\n        let forSplit=items[0].split(/\\s+/);\n        this.forExp=new ForExp(forSplit[0],forSplit[2]);\n\n        if(items.length>1){\n            let kvs=items[1].split(\"=\");\n            if(kvs.length==2){\n                if(kvs[1]==\"$index\")\n                    this.indexName=kvs[0];\n                else\n                    throw new Error(\"unrecognized variable \"+kvs[1]);\n            }\n        }\n    }\n    private newCopyNode(n:number){\n        let itemexp=this.forExp.itemExp;\n        let itemexpValue=this.forExp.arrayExp+\"[\"+n+\"]\";\n        let that=this;\n        let mvvm=new (class extends Mvvm{\n            $InitDataItems(): { name: string; value: any; }[] {\n                return [];\n            }\n            $InitComputeItems(): { name: string; get: () => any; }[] {\n                return [];\n            }\n            $Render(): DomStatus {\n                return null;\n            }\n            protected $hirented=that.mvvm;\n            $InitTreeroot(): VNode {\n                return null;\n            }\n            $InitNamespace(): string {\n                return that.mvvm.$InitNamespace();\n            }\n            $GetExpOrFunValue(exp:string):any{\n                let mvvm=this.$ExtendMvvm()\n                return EvalExp(mvvm,exp)\n            }\n            $ExtendMvvm(){\n                let mvvm=that.mvvm.$ExtendMvvm();\n                Object.defineProperty(mvvm,itemexp,{\n                    get:function(){\n                        return mvvm.$GetExpOrFunValue(itemexpValue);\n                    },\n                    enumerable:true,\n                    configurable:true\n                });\n                if(that.indexName!=null)\n                    Object.defineProperty(mvvm,that.indexName,{\n                        value:n,\n                        configurable:true,\n                        enumerable:true\n                    });\n                else\n                    Object.defineProperty(mvvm,\"$index\",{\n                        value:n,\n                        configurable:true,\n                        enumerable:true\n                    });\n                \n                return mvvm\n            }\n            $RevokeMethod(method:string,...params:any[]){\n                let mvvm=this.$ExtendMvvm();\n                mvvm.$RevokeMethod(method,...params);\n            }\n        });\n        let vnode=NewVNode(this.Vdom,mvvm,this,Priority.IF);\n        vnode.AttachChildren();\n        return vnode;\n    }\n    private implementForExp(newcount:number){\n        if(newcount>this.Children.length){\n            let custnodes:TemplateNode[]=[]\n            for(let i=this.Children.length;i<newcount;i++){       \n                let custnode=this.newCopyNode(i)\n                custnodes.push(custnode)\n            }\n            custnodes.forEach(custnode=>{\n                this.Children.push(custnode)                    \n                this.DomSet=this.DomSet.concat(custnode.Render())\n            })\n            this.Parent.Reflow()\n            return\n        }\n        if(newcount<this.Children.length){\n            let moved=this.Children.splice(newcount)\n            moved.forEach(moveditem=>{\n                this.DomSet.forEach(dom=>{\n                    let exist=moveditem.DomSet.some(moveddom=>{\n                        return moveddom.dom==dom.dom\n                    })\n                    if(exist){\n                        dom.type=DomType.DELETE\n                    }\n                })\n            })\n            \n            moved.forEach(vnode=>{\n                vnode.SetStatus(VNodeStatus.DEPRECATED);\n                vnode.OnDestroy();\n            });\n        }\n    }\n    \n    Update(){\n        let items=this.mvvm.$GetExpOrFunValue(this.forExp.arrayExp)\n        if(toString.call(items) === \"[object Array]\"){\n            this.implementForExp(items.length)\n        }\n    }\n    AttachChildren() {\n        let num=this.mvvm.$GetExpOrFunValue(this.forExp.arrayExp+\".length\")\n        for(let i=0;i<num;i++){\n            this.Children.push(this.newCopyNode(i))\n        }\n    }\n    Render():DomStatus[]{\n        this.mvvm.$CreateWatcher(this,this.forExp.arrayExp+\".length\",this.implementForExp.bind(this))\n\n        this.Children.forEach(child=>{\n            this.DomSet=this.DomSet.concat(child.Render())\n        })\n        return this.DomSet;\n    }\n    OnDestroy(){\n        this.Children.forEach(vnode=>vnode.OnDestroy())\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        this.Children.forEach(vnode=>vnode.SetStatus(status))\n    }\n    \n}","import { VNodeStatus } from \"../const\";\nimport { DomStatus } from '../models';\nimport { VDom } from \"../vdom/vdom\";\nimport { ComponentMvvm } from './../mvvm/component-mvvm';\nimport { VNode } from \"./vnode\";\n\nexport class SlotNode extends VNode{\n    constructor(protected vdom:VDom,public mvvm: ComponentMvvm, public Parent: VNode, private name: string) {\n        super(vdom,mvvm,Parent)\n        if(this.name==null || this.name==\"\")\n            this.name=\"default\"\n    }\n    Render(): DomStatus[] {\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Parent=this;\n            this.Children=[template];\n            this.DomSet=template.Render();\n        }\n        return this.DomSet;\n    }\n    \n    Update(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        if(template!=null){\n            template.Update()\n        }\n    }\n    SetStatus(status:VNodeStatus){\n        this.status=status\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.SetStatus(status)\n    }\n    OnDestroy(){\n        let template=this.mvvm.$GetFenceNode().GetTemplate(this.name)\n        template.OnDestroy()\n    }\n    \n}","import { REG_IN, REG_OUT } from '../const';\nimport { VDom } from '../vdom/vdom';\n\nexport class DirectiveNode {\n    //输入与输出值\n    protected ins_pure: { [name: string]: any } = {}\n    protected ins_exp: { [name: string]: string } = {}\n    protected outs: { [name: string]: string } = {}\n\n    constructor(private vdom:VDom) {\n        this.vdom.Attrs.forEach(attr=>{\n            this.addProperty(attr.Name,attr.Value)\n        })\n    }\n    private addProperty(name: string, value: string):boolean{\n        //输入\n        if(REG_IN.test(name)){\n            this.ins_exp[RegExp.$1]=value\n            return\n        }\n        //输出\n        if(REG_OUT.test(name) ){\n            this.outs[RegExp.$1]=value\n            return\n        }\n        this.ins_pure[name]=value\n        return\n    }\n    GetIn(prop:string){\n        if(this.ins_pure[prop]!=null)\n            return {value:this.ins_pure[prop],const:true} \n        if(this.ins_exp[prop]!=null)\n            return {value:this.ins_exp[prop],const:false}\n\n        return null\n    }\n    GetOut(prop:string){\n        return this.outs[prop]\n    }\n}","import { ParseStyle } from '../util';\nimport { VNode } from '../vnode/vnode';\nexport function Style(exp:string,vnode:VNode){\n    let reg=/^\\{([^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)(,[^:,]+:[^:\\?,]+\\?[^:,]+:[^:,]+)*\\}$/;\n    if(!reg.test(exp)){\n        throw new Error(\"exp format error:\"+exp);\n    }\n    let styleJson=ParseStyle(exp);\n    for(let key in styleJson){\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,styleJson[key],(newvalue)=>{\n            if(toString.call(newvalue)==\"[object String]\" && newvalue!=\"\"){\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=newvalue;\n            }else{\n                ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=\"\";\n            }\n        });\n        let value=watcher.GetCurValue();\n        if(toString.call(value)==\"[object String]\" && value!=\"\"){\n            ((vnode.DomSet[0].dom as HTMLElement).style as any)[key]=value;\n        }\n    }\n}\n","import { VNode } from \"../vnode/vnode\";\nimport { Watcher } from './../observer/watcher';\nexport function DirModel(exp: string, vnode: VNode) {\n    let inputtype=vnode.Vdom.GetAttr(\"type\")\n    let input=vnode.Vdom.NodeName.toLowerCase()\n\n    let watcher:Watcher\n    if(input==\"input\" && inputtype==\"checkbox\"){\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        },true);\n    }else{\n        watcher=vnode.mvvm.$CreateWatcher(vnode,exp, (newvalue) => {\n            setValue(vnode, newvalue)\n        });\n    }\n    setValue(vnode, watcher.GetCurValue());\n\n    vnode.DomSet[0].dom.addEventListener(\"input\", (event: any) => {\n        //select控件\n        if (vnode.GetNodeName() == \"select\") {\n            vnode.mvvm.$SetValue(exp, event.target.value)\n            return\n        }\n        //text radio checkbox控件\n        let inputType = (vnode.DomSet[0].dom as HTMLElement).getAttribute(\"type\")\n        if (inputType == null || inputType == \"\")\n            inputType = \"text\"\n        switch (inputType) {\n            case \"text\":\n            case \"radio\":\n                vnode.mvvm.$SetValue(exp, event.target.value)\n                break\n            case \"checkbox\":\n                let cur = watcher.GetCurValue();\n                if (toString.call(cur) == \"[object Array]\") {\n                    let oldarray = cur as Array<any>;\n                    let index = oldarray.indexOf(event.target.value)\n                    if (index == -1) {\n                        oldarray.push(event.target.value)\n                    } else {\n                        oldarray.splice(index, 1)\n                    }\n                }\n                break\n        }\n    })\n}\n\nfunction setValue(vnode: VNode, newvalue: any) {\n    let dom=vnode.DomSet[0].dom;\n    //select控件\n    if (vnode.GetNodeName()== \"select\") {\n        (dom as HTMLSelectElement).value = newvalue;\n        return\n    }\n    //text radio checkbox控件\n    let inputType = (dom as HTMLElement).getAttribute(\"type\")\n    if (inputType == null || inputType == \"\")\n        inputType = \"text\"\n    switch (inputType) {\n        case \"text\":\n            (dom as HTMLInputElement).value = newvalue\n            break\n        case \"radio\":\n            if ((dom as HTMLInputElement).value == newvalue) {\n                (dom as HTMLInputElement).checked = true\n            } else\n                (dom as HTMLInputElement).checked = false;\n            break\n        case \"checkbox\":\n            if (toString.call(newvalue) == \"[object Array]\") {\n                if (newvalue.indexOf((dom as HTMLInputElement).value) == -1) {\n                    (dom as HTMLInputElement).checked = false\n                } else\n                    (dom as HTMLInputElement).checked = true;\n            }\n\n            break\n    }\n}","import { StrToEvalstr } from \"../util\";\nimport { VNode } from '../vnode/vnode';\n\nexport function Html(exp:string,vnode:VNode){\n    let strEval=StrToEvalstr(exp);\n    if(strEval.isconst)\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=strEval.exp;\n    else{\n        let watcher=vnode.mvvm.$CreateWatcher(vnode,strEval.exp,newvalue=>{\n            (vnode.DomSet[0].dom as HTMLElement).innerHTML=newvalue\n        });\n        (vnode.DomSet[0].dom as HTMLElement).innerHTML=watcher.GetCurValue();\n    }\n}","import { PRE } from \"../const\";\nimport { StrToEvalstr } from \"../util\";\nimport { VNode } from \"../vnode/vnode\";\n\nexport function Href(exp:string,vnode:VNode){\n    let href:string=\"\";\n    let streval=StrToEvalstr(exp);\n    let dom=vnode.DomSet[0].dom as HTMLElement;\n    if(streval.isconst){\n        href=streval.exp;\n        setAttr(dom,href);\n    }\n    else{                \n        let watcher=vnode.mvvm.$CreateWatcher(vnode,streval.exp,newvalue=>{\n            href=newvalue;\n            setAttr(dom,href);\n        });\n        href=watcher.GetCurValue();\n        setAttr(dom,href);\n    }\n        \n    dom.addEventListener(\"click\",(event:Event)=>{\n        if(dom.nodeName=='A'){\n            event.preventDefault();\n        }\n        vnode.mvvm.$NavigateTo(href);\n    });\n}\nfunction setAttr(dom:HTMLElement,value:string){\n    if(dom.nodeName==\"A\")\n        dom.setAttribute(\"href\",value);\n    else\n        dom.setAttribute(PRE+\"href\",value);\n}\n","import { REG_EVENT, REG_STR } from \"../const\";\nimport { VNode } from '../vnode/vnode';\nexport function OnEvent(exp:string,vnode:VNode,options:string[]){\n    if(options==null || options.length==0)\n        throw new Error(\"r-on need specify event name\");\n    if (REG_EVENT.test(exp)) {\n        let methodStr = RegExp.$1\n        let paramsStr = RegExp.$2\n        if (paramsStr.length > 0) {\n            let ps = paramsStr.split(\",\")\n            vnode.DomSet[0].dom.addEventListener(options[0], (event) => {\n                let params: any[] = []\n                ps.forEach(p => {\n                    if (!REG_STR.test(p)) {\n                        if (p === \"true\") {\n                            params.push(true)\n                            return\n                        }\n                        if (p === \"false\") {\n                            params.push(false);\n                            return;\n                        }\n                        if(p==\"$event\"){\n                            params.push(event);\n                            return;\n                        }\n                        let n = new Number(p).valueOf()\n                        if (!isNaN(n)) {\n                            params.push(n.valueOf())\n                        } else {\n                            //肯定是本地变量\n                            params.push(vnode.mvvm.$GetExpOrFunValue(p))\n                        }\n                    } else {\n                        params.push(RegExp.$2)\n                    }\n                })\n                vnode.mvvm.$RevokeMethod(methodStr, ...params)\n            })\n        }else{\n            vnode.DomSet[0].dom.addEventListener(options[0], () => {\n                vnode.mvvm.$RevokeMethod(methodStr)  \n            })\n        }\n    }\n}","import { ParseStyle } from '../util';\nimport { VNode } from '../vnode/vnode';\nexport function Classes(exp:string,vnode:VNode){\n\n    let reg=/^\\{([^:,]+:[^:,]+)(,[^:,]+:[^:,]+)*\\}$/;\n    if(!reg.test(exp)){\n        throw new Error(\"exp format error:\"+exp);\n    }\n    let classJson=ParseStyle(exp);\n    for(let key in classJson){            \n        let watcher=vnode.mvvm.$CreateWatcher(vnode,classJson[key],(newvalue)=>{\n            if(newvalue){\n                (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n            }else{\n                (vnode.DomSet[0].dom as HTMLElement).classList.remove(key);\n            }\n        });\n        let value=watcher.GetCurValue();\n        if(value){\n            (vnode.DomSet[0].dom as HTMLElement).classList.add(key);\n        }\n    }\n}","import { GetInnerDir } from \"../directive/inner-dir\";\nimport { GetDirectiveCon, IsDirectiveRegistered } from '../manager/directive-manager';\nimport { DirectiveMVVM } from '../mvvm/directive-mvvm';\nimport { GetNS, InsertDomChild, StrToEvalstr } from '../util';\nimport { DomType, REG_IN, REG_OUT, REG_ATTR, PRE, ANCHOR } from './../const';\nimport { InnerDirective } from './../directive/inner-dir';\nimport { DirectiveNode } from './directive-node';\nimport { VNode } from './vnode';\nimport { VDom } from \"../vdom/vdom\";\nimport { Mvvm } from \"../mvvm/mvvm\";\nimport { DomStatus } from \"../models\";\nexport class VinallaNode extends VNode{\n    \n    private directives:DirectiveMVVM[]=[]\n    private innerDirective:{dir:InnerDirective,exp:string,options:string[]}[]=[];\n    \n    private isAnchor:boolean=false;\n    private anchorName:string=\"\";\n\n    /**普通属性 */\n    protected attrs: { name: string, value: string }[] = [];\n    \n    constructor(public Vdom:VDom,public mvvm: Mvvm,public Parent:VNode){\n        super(Vdom,mvvm,Parent);\n        this.nodeValue = this.Vdom.NodeValue\n        this.nodeName = this.Vdom.NodeName\n        this.nodeType = this.Vdom.NodeType\n        //保存元素属性\n        let vanillaAttrs=this.Vdom.Attrs\n        for (let i = 0; i < this.Vdom.Attrs.length; i++) {\n            let attr=this.Vdom.Attrs[i]\n            let ns=GetNS(attr.Name)\n            if(ns.namespace==null)\n                ns.namespace=this.mvvm.$InitNamespace()\n            if(IsDirectiveRegistered(ns.value,ns.namespace)){\n                let dirNode=new DirectiveNode(this.Vdom)\n                let dirCons=GetDirectiveCon(ns.value,ns.namespace)\n                let dirMvvm=new dirCons();\n                dirMvvm.$Initialize(dirNode,this);\n                vanillaAttrs=vanillaAttrs.filter(attr=>{\n                    let name=attr.Name\n                    if(REG_IN.test(attr.Name) || REG_OUT.test(attr.Name))\n                        name=RegExp.$1\n                    \n                    let isprop= dirMvvm.$Ins.some(prop=>prop.name==name)\n                    let isevent=dirMvvm.$Outs.some(event=>event==name)\n                    return !(isprop || isevent)\n                })\n                this.directives.push(dirMvvm)\n            }\n        }\n        vanillaAttrs= vanillaAttrs.filter(attr=>{\n            let slice=attr.Name.split(\":\");\n            let dir=GetInnerDir(slice[0]);\n            if(dir!=null){\n                this.innerDirective.push({dir:dir,exp:attr.Value,options:slice.slice(1)})\n                return false\n            }\n            return true\n        })\n        vanillaAttrs.forEach(attr=>{\n            if(REG_ATTR.test(attr.Name)){\n                this.attrs.push({name:attr.Name,value:attr.Value});\n                if(attr.Name==PRE+ANCHOR){\n                    this.isAnchor=true;\n                    this.anchorName=attr.Value;\n                }\n            }\n        })\n    }\n\n    OnDestroy(){\n        super.OnDestroy()\n        this.directives.forEach(dir=>dir.$OnDestroy())\n    }\n\n    protected directiveBind(){\n        this.directives.forEach(dir=>dir.$Render())\n        this.innerDirective.forEach(item=>{\n            item.dir(item.exp,this,item.options)\n        })\n    }\n    \n    \n    Render() :DomStatus[]{\n        if (this.nodeType == 1) {\n            let dom = document.createElement(this.nodeName)\n            this.attrs.forEach(prop => {\n                let evalexp=StrToEvalstr(prop.value);\n                if (!evalexp.isconst) {\n                    let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                        dom.setAttribute(prop.name, newvalue);\n                    });\n                    let value=watcher.GetCurValue();\n                    if(prop.name=='src' && this.nodeName=='img')\n                        (dom as HTMLImageElement).src=value;\n                    else\n                        dom.setAttribute(prop.name, value);\n                }else{\n                    dom.setAttribute(prop.name, evalexp.exp);\n                }\n                \n            })\n            \n            this.DomSet = [{type:DomType.NEW,dom:dom}] \n            \n            this.Children.forEach(child => {\n                let childdomset=child.Render();\n                childdomset.forEach(childdom=>{\n                    this.DomSet[0].dom.appendChild(childdom.dom)\n                });\n                childdomset.forEach(childom=>{\n                    childom.type=DomType.CONSTANT\n                });\n            })\n            this.directiveBind()\n            return this.DomSet\n        }\n        if (this.nodeType == 3) {\n            let dom = document.createTextNode(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom:dom}]\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                let watcher=this.mvvm.$CreateWatcher(this,evalexp.exp,(newvalue, oldvalue)=>{\n                    dom.textContent = newvalue\n                });\n                dom.textContent=watcher.GetCurValue();\n            }else{\n                dom.textContent=evalexp.exp\n            }\n            return this.DomSet\n        }\n        if(this.nodeType==8){\n            let dom=document.createComment(this.nodeValue)\n            this.DomSet=[{type:DomType.NEW,dom: dom}]\n            return this.DomSet\n        }\n    }\n    Refresh() {\n        this.DomSet.forEach(dom=>dom.type=DomType.CONSTANT);\n        if(this.nodeType==1){\n            let thedom=this.DomSet[0].dom\n            let childdom:Node=null\n            this.Children.forEach(child=>{\n                child.DomSet.forEach(domstate=>{\n                    if(domstate.type==DomType.CONSTANT){\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.NEW){\n                        InsertDomChild(thedom,domstate.dom,childdom)\n                        childdom=domstate.dom\n                        return\n                    }\n                    if(domstate.type==DomType.DELETE){\n                        thedom.removeChild(domstate.dom)\n                        return\n                    }\n                })\n            })\n        }\n        this.Children.forEach(child=>child.Refresh())\n    }\n    Update(){\n        //todo 更新属性\n        if (this.nodeType == 1) {\n            let children: VNode[] = []\n            this.Children.forEach(child => {\n                children.push(child)\n            })\n            children.forEach(child => {\n                child.Update()\n            })\n            //todo 设置属性\n            return\n        }\n        if (this.nodeType == 3) {\n            let evalexp=StrToEvalstr(this.nodeValue)\n            if (!evalexp.isconst) {\n                this.DomSet[0].dom.textContent=this.mvvm.$GetExpOrFunValue(evalexp.exp)\n            }else{\n                this.DomSet[0].dom.textContent=evalexp.exp\n            }\n        }\n    }\n    Reflow(){\n    }\n    GetAnchor(name:string):VinallaNode{\n        if(this.isAnchor && this.anchorName==name){\n            return this;\n        }\n        return super.GetAnchor(name);\n    }\n}","import { GetDomTree, RegisterComponent, InitComponent, ComponentAutoId } from '../manager/components-manager';\nimport { ComponentOption, Prop } from '../models';\nimport { NewVNode } from '../vdom/vdom';\nimport { VNode } from '../vnode/vnode';\nimport { DomStatus, Event, IComponentMvvm } from './../models';\nimport { FetchProperty } from './property';\n\n\n\nexport function Component(option:ComponentOption){\n    checkComponentOption(option)\n    let res=FetchProperty()\n    return function(target:IComponentMvvm){\n        let constructor= class $ComponentMvvm extends target{\n            $InitFuncs:string[]=res.initFuncs\n            $MountFuncs:string[]=res.mountFuncs\n            $DestroyFuncs:string[]=res.destroyFuncs\n            $initialize(){\n                super.$initialize()\n                this.$InitFuncs.forEach(init=>{\n                    (this as any)[init].call(this)\n                })\n            }\n            $Render():DomStatus{\n                let domstatus=super.$Render();\n                this.$MountFuncs.forEach(func=>{\n                    (this as any)[func].call(this)\n                });\n                return domstatus;\n            }\n            $OnDestroy(){\n                super.$OnDestroy()\n                this.$DestroyFuncs.forEach(destroy=>{\n                    (this as any)[destroy].call(this)\n                })\n            }\n            $InitTreeroot():VNode{\n                //以防页面组件未初始化\n                InitComponent(this.$InitName(),this.$InitNamespace());\n\n                let domtree=GetDomTree(this.$InitName(),this.$InitNamespace())\n                if(domtree==null){\n                    throw new Error(\"not found template or templateUrl for component \"+this.$InitName()+\" in \"+this.$InitNamespace())\n                }\n                \n                let vnode=NewVNode(domtree,this,null)\n                return vnode\n            }\n            $InitNamespace(): string {\n                return option.namespace\n            }\n            $InitDataItems(): {name:string,value:any}[] {\n                let datas:{name:string,value:any}[]=[]\n                res.datas.forEach(item=>{\n                    datas.push({name:item,value:(this as any)[item]})\n                })\n                return datas\n            }\n            $InitComputeItems(): { name: string; get: () => any }[] {\n                return res.computes\n            }\n            $InitName():string{\n                return option.name\n            }\n            $InitIns():Prop[]{\n                return res.props\n            }\n            $InitOuts():Event[]{\n                return option.events\n            }\n        }\n        if(option.name==null)\n            option.name=target.name.toLowerCase()+ComponentAutoId();\n        RegisterComponent(option.name,option.namespace,constructor,option);\n        return (constructor as any);\n    }\n}\n\n\nfunction checkComponentOption(option:ComponentOption){\n    option.namespace=option.namespace?option.namespace:\"default\"\n    option.events=option.events?option.events:[]\n}\n\n","import { Start } from \"./manager/start\";\n\n\nexport {Component} from \"./decorator/component\";\nexport {App} from \"./decorator/app\";\nexport {Reactive,Computed,Prop,OnInit,OnDestroy,OnMount} from \"./decorator/property\";\nexport {Directive} from \"./decorator/directive\"\n\nexport {ComponentMvvm} from \"./mvvm/component-mvvm\"\nexport {AppMvvm} from \"./mvvm/app-mvvm\"\nexport {DirectiveMVVM} from \"./mvvm/directive-mvvm\"\n\nexport {RegisterRouter} from \"./router/router-manager\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    Start()\n})\n\n\n"],"sourceRoot":""}